{
  "nodes": [
    {
      "id": "oaModule",
      "label": "Module",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "OpenAccess will maintain the correspondence between the module hierarchy and the block hierarchy for all module objects that are underneath a design's top module. There are zero or one top modules ...",
      "methods_count": 29
    },
    {
      "id": "oaRoute",
      "label": "Route",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "Routes are used to represent the symbolic routing used by high capacity routers. They specify end-point connected routes that also indicate the objects they connect. Other routing may be geometric,...",
      "methods_count": 20
    },
    {
      "id": "oaModBusNet",
      "label": "ModBusNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "oaModBusNet,oaOccBusNet, andoaBusNeteach represent bus nets on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModBusNet, the master is...",
      "methods_count": 14
    },
    {
      "id": "oaRecursionObserver",
      "label": "RecursionObserver",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.",
      "methods_count": 2
    },
    {
      "id": "oaOccBusTermBit",
      "label": "OccBusTermBit",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "The oaOccBusTermBits are always implicit terminals. They cannot have their connected net changed with moveToNet(), nor can they have pins created on them.oaOccBusTermBit,oaModBusTermBit, andoaBusTe...",
      "methods_count": 8
    },
    {
      "id": "",
      "label": "",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaOccMemNetIter",
      "label": "OccMemNetIter",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in thegetNext()function. This index indicates the member position ...",
      "methods_count": 1
    },
    {
      "id": "oaTextDisplay",
      "label": "TextDisplay",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 20
    },
    {
      "id": "oaElmore",
      "label": "Elmore",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Undo is not supported for the oaElmore class.The oaElmore class can be observed by deriving fromoaObserver<oaElmore>. The oaElmore class can be observed by deriving fromoaObserver<oaElmore>.",
      "methods_count": 9
    },
    {
      "id": "oaRect",
      "label": "Rect",
      "type": "Class",
      "domain": "Physical",
      "concept": "Rect",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaInstAttrType",
      "label": "InstAttrType",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaNetTermArray",
      "label": "NetTermArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaOccBusTerm",
      "label": "OccBusTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModBusTerm, oaOccBusTerm, andoaBusTermeach represent bus terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaOccBusTerm, the...",
      "methods_count": 10
    },
    {
      "id": "oaOccPathSeg",
      "label": "OccPathSeg",
      "type": "Class",
      "domain": "Physical",
      "concept": "Path",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaOccArrayInst",
      "label": "OccArrayInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 8
    },
    {
      "id": "oaPin",
      "label": "Pin",
      "type": "Class",
      "domain": "Physical",
      "concept": "Pin",
      "description": "All pins are associated with a physical figure and are named. These names can be assigned by the creator. For pins associated with scalar terminals, pin names can be automatically assigned by the d...",
      "methods_count": 16
    },
    {
      "id": "oaModNetConnectDef",
      "label": "ModNetConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "Applications that analyze design connectivity must resolve the net name of the net associated with an oaModNetConnectDef. The application searches up the design hierarchy for anoaModAssignmentthat ...",
      "methods_count": 2
    },
    {
      "id": "oaBlockObject",
      "label": "BlockObject",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "",
      "methods_count": 22
    },
    {
      "id": "oaModBitNet",
      "label": "ModBitNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "You can have two or more bitNets that are equivalent. Equivalent bitNets are traversed separately or logically as the same net.You can create associate a connection definition,oaModNetConnectDef, w...",
      "methods_count": 9
    },
    {
      "id": "oaBitOrder",
      "label": "BitOrder",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "oaBusNetdefinitions (oaBusNetDef,oaModBusNetDef,oaOccBusNetDef)oaBusTermdefinitions (oaBusTermDef,oaModBusTermDef,oaOccBusTermDef)oaVectorInstdefinitions (oaVectorInstDef,oaModVectorInstDef,oaOccVe...",
      "methods_count": 2
    },
    {
      "id": "oaModBundleTerm",
      "label": "ModBundleTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModBundleTerm,oaOccBundleTerm, andoaBundleTermeach represent bundle terminals in a different hierarchy domain, where in each case the master represents a level of hierarchy in the design.For oaMo...",
      "methods_count": 9
    },
    {
      "id": "oaDesignUndoObserverBase",
      "label": "DesignUndoObserverBase",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "See oaObserver for a general description of how callbacks are used.",
      "methods_count": 8
    },
    {
      "id": "oaBaseMemNetCollection",
      "label": "BaseMemNetCollection",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "The member net collection classes represent collections of nets that the starting net is a member of.See the derived classes for more details. See the derived classes for more details.",
      "methods_count": 2
    },
    {
      "id": "oaRowHeader",
      "label": "RowHeader",
      "type": "Class",
      "domain": "Layout",
      "concept": "Row",
      "description": "The oaRowHeader class can be observed by deriving fromoaObserver<oaRowHeader>.",
      "methods_count": 9
    },
    {
      "id": "oaModBitInst",
      "label": "ModBitInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaModDesignBitInst objects are always in the module domain.",
      "methods_count": 0
    },
    {
      "id": "oaAssignment",
      "label": "Assignment",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaAssignment class can be observed by deriving fromoaObserver<oaAssignment>.SeeoaNetConnectDefandoaTermConnectDeffor information on the specific type of connection definition. SeeoaAssignValuea...",
      "methods_count": 6
    },
    {
      "id": "oaArrayInst",
      "label": "ArrayInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "Note that oaArrayInsts do not provide any mechanism for specifying the connectivity between elements of the array. They act just like oaScalarInsts in that there is a single copy of their terminals...",
      "methods_count": 22
    },
    {
      "id": "oaModDesignInst",
      "label": "ModDesignInst",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "oaModDesignInst objects are always in the module domain.",
      "methods_count": 13
    },
    {
      "id": "oaRow",
      "label": "Row",
      "type": "Class",
      "domain": "Layout",
      "concept": "Row",
      "description": "The oaRow class can be observed by deriving fromoaObserver<oaRow>.",
      "methods_count": 20
    },
    {
      "id": "oaDesignDataType",
      "label": "DesignDataType",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "The oaDesignDataType class has values for each of the different classes of managed data contained within anoaDesign. These values are used for several calls that refer to whole classes of objects i...",
      "methods_count": 2
    },
    {
      "id": "oaBusNetDef",
      "label": "BusNetDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "A busNetDef can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a[22:25]is a legal bus name. Bus indexes must be non-negative.An oaBusNetDef is automaticall...",
      "methods_count": 15
    },
    {
      "id": "oaOccBundleTerm",
      "label": "OccBundleTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModBundleTerm, oaOccBundleTerm, andoaBundleTermeach represent bundle terminals in a different kind of hierarchy. In each case the master represents a level of hierarchy in the design. For oaOccBu...",
      "methods_count": 9
    },
    {
      "id": "oaMutualInductor",
      "label": "MutualInductor",
      "type": "Class",
      "domain": "Device",
      "concept": "Inductor",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaModTermArray",
      "label": "ModTermArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaCMap",
      "label": "CMap",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Each GCell can hold supply and demand counts for routes that traverse the GCell horizontally, vertically, and up/down through vias. All of these GCell statistics are set and managed by applications...",
      "methods_count": 21
    },
    {
      "id": "oaBlockageQuery",
      "label": "BlockageQuery",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "",
      "methods_count": 7
    },
    {
      "id": "oaAnalysisOpPoint",
      "label": "AnalysisOpPoint",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaAnalysisOpPoint class can be observed by deriving fromoaObserver<oaAnalysisOpPoint>.",
      "methods_count": 7
    },
    {
      "id": "oaSnapBoundary",
      "label": "SnapBoundary",
      "type": "Class",
      "domain": "Layout",
      "concept": "Boundary",
      "description": "oaSnapBoundaries are optional adjuncts to oaPRBoundaries. If theoaPRBoundaryis rectangular then it will suffice for these purposes and no oaSnapBoundary need be created. oaSnapBoundaries are needed...",
      "methods_count": 3
    },
    {
      "id": "oaPiElmore",
      "label": "PiElmore",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Undo is not supported for oaPiElmore objects.",
      "methods_count": 11
    },
    {
      "id": "oaOccDesignInst",
      "label": "OccDesignInst",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "oaOccDesignInst objects are always in the occurrence domain.",
      "methods_count": 10
    },
    {
      "id": "oaTextDisplayCollection",
      "label": "TextDisplayCollection",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaRefHeader",
      "label": "RefHeader",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 7
    },
    {
      "id": "oaRegionQuery",
      "label": "RegionQuery",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "A Region Query descends through a design hierarchy from the top design with which it is constructed, producing all objects of a specified type in the specified query region. It should be noted that...",
      "methods_count": 13
    },
    {
      "id": "oaEvalTextLink",
      "label": "EvalTextLink",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaFigGroupStatus",
      "label": "FigGroupStatus",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "OpenAccess does not enforce these settings. Tools that modify FigGroups, or figures that belong to FigGroups, must enforce them.SeeEnum Wrappersin the Programmers Guide for a discussion of enum wra...",
      "methods_count": 2
    },
    {
      "id": "oaOccBusNetDef",
      "label": "OccBusNetDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "The bit order of an explicit oaOccBusNetDef is independent of the order within individual oaOccBusNets with the same base name. Verilog requires a single wire declaration for a given base name, and...",
      "methods_count": 12
    },
    {
      "id": "oaBlockageType",
      "label": "BlockageType",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 3
    },
    {
      "id": "oaModNetTermNameArray",
      "label": "ModNetTermNameArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaNetTermArrayBase",
      "label": "NetTermArrayBase",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaOccVectorInstBit",
      "label": "OccVectorInstBit",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaOccVectorInstBit objects are always in the occurrence domain.",
      "methods_count": 11
    },
    {
      "id": "oaOccInst",
      "label": "OccInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "An oaOccInst may correspond to anoaModInst, anoaInst, or both:If the occInst is an occurrence of anoaModModuleInst(it will be anoaOccModuleScalarInst, or anoaOccModuleVectorInst) then it will only ...",
      "methods_count": 16
    },
    {
      "id": "oaScalarTerm",
      "label": "ScalarTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaScalarTerm objects are always in the block domain. oaScalarTerms may be physical-only terminals that are only in the block hierarchy, or they can be cross-domain terminals that directly correspon...",
      "methods_count": 7
    },
    {
      "id": "oaModAssignAssignment",
      "label": "ModAssignAssignment",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "This type of connection assignment is useful for integrating a block of intellectual property that contain connection definition. An oaModAssignAssignment can be used to insure that connectivity tr...",
      "methods_count": 3
    },
    {
      "id": "oaNetConnectDef",
      "label": "NetConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "Applications that analyze design connectivity must resolve the net name of the net associated with an oaNetConnectDef. The application searches up the design hierarchy for anoaAssignmentthat matche...",
      "methods_count": 2
    },
    {
      "id": "oaShapeQuery",
      "label": "ShapeQuery",
      "type": "Class",
      "domain": "Physical",
      "concept": "Shape",
      "description": "The sequence of virtual functions that get called during the query is as follows.oaShapeQuery::queryShape(oaShape *shape)- For shapes in a designoaRegionQuery::startRef(oaRef *ref, oaUInt4 row, oaU...",
      "methods_count": 6
    },
    {
      "id": "oaRouteTopology",
      "label": "RouteTopology",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaMemNetCollection",
      "label": "MemNetCollection",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "The oaMemNetCollection class is a specialized collection class because theoaMemNetIterused to iterate over it does not have the standard getNext signature use by the template collection classes.The...",
      "methods_count": 1
    },
    {
      "id": "oaOccPolygon",
      "label": "OccPolygon",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaLayerBlockage",
      "label": "LayerBlockage",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "oaLayerBlockages may have an effective width. This is the value that is used by routing tools to determine the minimum spacing constraint for other geometry placed near the blockage. Typically, if ...",
      "methods_count": 16
    },
    {
      "id": "oaOccObject",
      "label": "OccObject",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaModBusTermBit",
      "label": "ModBusTermBit",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "An oaModBusTermBit can be explicitly created. An explicitly created busTermBit must be explicitly destroyed.oaModBusTermBit,oaOccBusTermBit, andoaBusTermBiteach represent a bit of a busTerminal on ...",
      "methods_count": 10
    },
    {
      "id": "oaModMemNetIter",
      "label": "ModMemNetIter",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in thegetNext()function. This index indicates the member position ...",
      "methods_count": 1
    },
    {
      "id": "oaLayerRangeHalo",
      "label": "LayerRangeHalo",
      "type": "Class",
      "domain": "Physical",
      "concept": "Layer",
      "description": "The mask numbers of layers are ordered, but their corresponding layer numbers may not be ordered. A mask number can also map to one or more layers.A mask range can be specified by a pair of lower a...",
      "methods_count": 6
    },
    {
      "id": "oaOccPropDisplay",
      "label": "OccPropDisplay",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaSubNetwork",
      "label": "SubNetwork",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "The oaSubNetwork class can be used to represent the relationship between a set of nodes and devices and the corresponding route element or shape. Nodes can appear in multiple subNetworks for such c...",
      "methods_count": 10
    },
    {
      "id": "oaBlockage",
      "label": "Blockage",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "Note: LayerBlockages (bothoaLayerBlockageandoaLayerHalo) will never have a blockageType of oacPlacementBlockageType. AreaBlockages (bothoaAreaBlockageandoaAreaHalo) always will be of type oacPlacem...",
      "methods_count": 9
    },
    {
      "id": "oaLayerHalo",
      "label": "LayerHalo",
      "type": "Class",
      "domain": "Physical",
      "concept": "Layer",
      "description": "The oaLayerHalo applies around the perimeter of an instance. It prohibits routing on the given layer parallel to the edge of the instance, but it allows routing perpendicular to the instance edge. ...",
      "methods_count": 6
    },
    {
      "id": "oaLayerRangeBlockage",
      "label": "LayerRangeBlockage",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "The mask numbers of layers are ordered, but their corresponding layer numbers may not be ordered. A mask number can also map to one or more layers.A mask range can be specified by a pair of lower a...",
      "methods_count": 6
    },
    {
      "id": "oaAreaBoundary",
      "label": "AreaBoundary",
      "type": "Class",
      "domain": "Layout",
      "concept": "Boundary",
      "description": "Area boundaries are named and there can be multiple area boundaries in a givenoaBlock.",
      "methods_count": 7
    },
    {
      "id": "oaModScalarNet",
      "label": "ModScalarNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 8
    },
    {
      "id": "oaModModuleScalarInst",
      "label": "ModModuleScalarInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaOccDot",
      "label": "OccDot",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaModModuleVectorInst",
      "label": "ModModuleVectorInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "An oaModModuleVectorInst object is always in the module domain. It is an instance of a module as opposed to anoaModVectorInstwhich would be a vector instance of a design.",
      "methods_count": 13
    },
    {
      "id": "oaModBundleNet",
      "label": "ModBundleNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaGCellPattern",
      "label": "GCellPattern",
      "type": "Class",
      "domain": "Layout",
      "concept": "GCell",
      "description": "GCellPatterns can be horizontal or vertical and at least one of each must exist in a design for it to have a valid congestion map. Each GCellPattern declares a set of uniformly spaced edges that wi...",
      "methods_count": 6
    },
    {
      "id": "oaEndpointType",
      "label": "EndpointType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaOccAssignment",
      "label": "OccAssignment",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaOccAssignment class can be observed by deriving fromoaObserver<oaOccAssignment>.",
      "methods_count": 3
    },
    {
      "id": "oaModBusNetBit",
      "label": "ModBusNetBit",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "An oaModBusNetBit can be explicitly created and used in other operations like creating terminals or instTerms. An explicitly created busNetBit must be explicitly destroyed.oaModBusNetBit, oaOccBusN...",
      "methods_count": 10
    },
    {
      "id": "oaPlacementBlockageQuery",
      "label": "PlacementBlockageQuery",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaLine",
      "label": "Line",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaRouteStatus",
      "label": "RouteStatus",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaScanChainSetType",
      "label": "ScanChainSetType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaPath",
      "label": "Path",
      "type": "Class",
      "domain": "Physical",
      "concept": "Path",
      "description": "Two coincident and three collinear points are illegal, and an exception is thrown if these combinations are detected. You can useoaPointArray::compress()to remove these combinations. For more infor...",
      "methods_count": 16
    },
    {
      "id": "oaSeriesRL",
      "label": "SeriesRL",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 7
    },
    {
      "id": "oaModInst",
      "label": "ModInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaModInst objects are always in the module domain. An oaModInst can have an equivalentoaInstin the block domain and will always have an equivalentoaOccInstin the occurrence hierarchy.Note thatoaMod...",
      "methods_count": 15
    },
    {
      "id": "oaRouteObjectArray",
      "label": "RouteObjectArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaOccAssignValue",
      "label": "OccAssignValue",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "the name of the net to use in place of the name of the net associated with the correspondingoaOccNetConnectDefobjectthe name of the net to use to externally connect to the terminal associated with ...",
      "methods_count": 1
    },
    {
      "id": "oaTermType",
      "label": "TermType",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaInstQuery",
      "label": "InstQuery",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaLPPHeader",
      "label": "LPPHeader",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "During binding, LPPHeaders at lower levels of the design hierarchy are promoted up the design hierarchy. As a result, the top block of a given design will have an LPPHeader for every LPPHeader that...",
      "methods_count": 9
    },
    {
      "id": "oaGroundedNode",
      "label": "GroundedNode",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaOccArc",
      "label": "OccArc",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 7
    },
    {
      "id": "oaNet",
      "label": "Net",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "oaNet objects are always in the block domain. Nets span the domains in a design. An oaNet may have one or more equivalent oaModNet's in the module hierarchy and will have an equivalentoaOccNetin th...",
      "methods_count": 35
    },
    {
      "id": "oaModModuleInstHeader",
      "label": "ModModuleInstHeader",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "The oaModModuleInstHeader class can be observed by deriving fromoaObserver<oaModModuleInstHeader>.",
      "methods_count": 7
    },
    {
      "id": "oaMemNetIter",
      "label": "MemNetIter",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in thegetNext()function. This index indicates the member position ...",
      "methods_count": 1
    },
    {
      "id": "oaRef",
      "label": "Ref",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaPRBoundary",
      "label": "PRBoundary",
      "type": "Class",
      "domain": "Layout",
      "concept": "Boundary",
      "description": "For cell placement that is directed by sites in oaRows, the oaPRBoundary determines the aspect of the cell that must align with the site. For placement near a placement blockage, it is the oaPRBoun...",
      "methods_count": 12
    },
    {
      "id": "oaCoreBoxSpec",
      "label": "CoreBoxSpec",
      "type": "Class",
      "domain": "Layout",
      "concept": "Core",
      "description": "The core box represents the limits of the core within the given design. At the full chip level, there will be rows of IO pads and peripheral routing that are outside the core box. For a block, the ...",
      "methods_count": 20
    },
    {
      "id": "oaDesign",
      "label": "Design",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "Each oaDesign lives in a cellView in an OpenAccess library and is identified by the lib, cell, and view names for thatoaCellView. It will be persistently represented as one or more files in that ce...",
      "methods_count": 108
    },
    {
      "id": "oaBusTermBit",
      "label": "BusTermBit",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "An oaBusTermBit can be explicitly created and used in other operations like creating pins. An explicitly created busTermBit must be explicitly destroyed.",
      "methods_count": 10
    },
    {
      "id": "oaOccText",
      "label": "OccText",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaNetTermPosArray",
      "label": "NetTermPosArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaObserver",
      "label": "Observer",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeoaObserverfor information on using Open Access observer template classes to derive and instantiate observers in an application.",
      "methods_count": 6
    },
    {
      "id": "oaScanChainSet",
      "label": "ScanChainSet",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaScanChainSet class can be observed by deriving fromoaObserver<oaScanChainSet>.",
      "methods_count": 3
    },
    {
      "id": "oaModVectorInstDef",
      "label": "ModVectorInstDef",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "A vectorInstDef can be 'sparse' (have missing bits). Vectors do not have to start or end at zero. For example,a[22:25]is a legal vectorInst name. Vector indexes must be non-negative.An vectorInstDe...",
      "methods_count": 13
    },
    {
      "id": "oaViaDirection",
      "label": "ViaDirection",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaConnFig",
      "label": "ConnFig",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaModScalarTerm",
      "label": "ModScalarTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModScalarTerm,oaOccScalarTerm, andoaScalarTermeach represent scalar terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModS...",
      "methods_count": 7
    },
    {
      "id": "oaOccEllipse",
      "label": "OccEllipse",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaSymmetry",
      "label": "Symmetry",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaAreaHalo",
      "label": "AreaHalo",
      "type": "Class",
      "domain": "Layout",
      "concept": "Halo",
      "description": "The area halo is most commonly used to prevent standard cells from being placed within a certain range of an instance. This is usually done to make sure there is enough space to properly route to t...",
      "methods_count": 6
    },
    {
      "id": "oaOccBitInst",
      "label": "OccBitInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaOccBitInst objects are always in the occurrence domain.",
      "methods_count": 0
    },
    {
      "id": "oaOccAttrDisplay",
      "label": "OccAttrDisplay",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaOccScalarTerm",
      "label": "OccScalarTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModScalarTerm, oaOccScalarTerm, andoaScalarTermeach represent scalar terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaOcc...",
      "methods_count": 6
    },
    {
      "id": "oaOccMemNetCollection",
      "label": "OccMemNetCollection",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "The oaOccMemNetCollection class is a specialized collection class because theoaOccMemNetIterused to iterate over it does not have the standard getNext signature use by the template collection class...",
      "methods_count": 1
    },
    {
      "id": "oaBitTerm",
      "label": "BitTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "You can create associate a connection definition,oaTermConnectDef, with a bitTerm.",
      "methods_count": 17
    },
    {
      "id": "oaParasiticNetwork",
      "label": "ParasiticNetwork",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "Parasitic networks can be associated with nets in the block and occurrence domains. These networks are generally created by an extractor that analyzes the geometry of the nets to create the parasit...",
      "methods_count": 32
    },
    {
      "id": "oaAssignedNetSpec",
      "label": "AssignedNetSpec",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaTerm",
      "label": "Term",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "All terminals are required to have a net even if there is nothing else attached to that net.Multi-bit terminals represent a group of logical connections to import or export from the block. The term...",
      "methods_count": 25
    },
    {
      "id": "oaSteiner",
      "label": "Steiner",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaSteiner class can be observed by deriving fromoaObserver<oaSteiner>.",
      "methods_count": 6
    },
    {
      "id": "oaTermConnectDef",
      "label": "TermConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "Applications that analyze design connectivity must resolve the name of the net to externally connect to the terminal associated with the oaTermConnectDef. The application searches up the design hie...",
      "methods_count": 2
    },
    {
      "id": "oaModBusTerm",
      "label": "ModBusTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModBusTerm,oaOccBusTerm, andoaBusTermeach represent bus terminals in a different hierarchy domain, where in each case the terminal's master represents a level of hierarchy in the design.For oaMod...",
      "methods_count": 14
    },
    {
      "id": "oaModAssignment",
      "label": "ModAssignment",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeoaModNetConnectDefandoaModTermConnectDeffor information on the specific type of connection definition. SeeoaModAssignValueandoaModAssignAssignmentfor information on the specific type of connecti...",
      "methods_count": 6
    },
    {
      "id": "oaConnStatus",
      "label": "ConnStatus",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Conn",
      "description": "OpenAccess does not enforce these settings. Tools that modify the connectivity must enforce them.SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers. SeeEnum Wrappersin the P...",
      "methods_count": 2
    },
    {
      "id": "oaLayerHeaderArray",
      "label": "LayerHeaderArray",
      "type": "Class",
      "domain": "Physical",
      "concept": "Layer",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaRouteMethod",
      "label": "RouteMethod",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 3
    },
    {
      "id": "oaStdViaHeader",
      "label": "StdViaHeader",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "A discussion of the roleoaViaHeaderobjects in the context of theoaStdViaobjects they reference can be found in theRepresenting Vias in OpenAccesssection of the Programmers Guide.",
      "methods_count": 1
    },
    {
      "id": "oaBundleTerm",
      "label": "BundleTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaOccEvalText",
      "label": "OccEvalText",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaAttrType",
      "label": "AttrType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaOpPointHeader",
      "label": "OpPointHeader",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaOpPointHeader class can be observed by deriving fromoaObserver<oaOpPointHeader>.",
      "methods_count": 6
    },
    {
      "id": "oaResistor",
      "label": "Resistor",
      "type": "Class",
      "domain": "Device",
      "concept": "Resistor",
      "description": "",
      "methods_count": 20
    },
    {
      "id": "oaTextLink",
      "label": "TextLink",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "For more information, refer toHow to Write a Plug-in to Calculate Bounding Boxes for Textin theProgrammers Guide.",
      "methods_count": 4
    },
    {
      "id": "oaBaseMemNetIter",
      "label": "BaseMemNetIter",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in the getNext() function. This index indicates the member positio...",
      "methods_count": 1
    },
    {
      "id": "oaLayerHeader",
      "label": "LayerHeader",
      "type": "Class",
      "domain": "Physical",
      "concept": "Layer",
      "description": "The oaLayerHeader class can be observed by deriving fromoaObserver<oaLayerHeader>.",
      "methods_count": 11
    },
    {
      "id": "oaVectorInstDef",
      "label": "VectorInstDef",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "A vectorInstDef is automatically created if necessary whenever applications create vectorInsts. Implicitly created vectorInst definitions have no bitOrder. Applications may explicitly create a vect...",
      "methods_count": 13
    },
    {
      "id": "oaModModuleBitInst",
      "label": "ModModuleBitInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaModModuleBitInst objects refer to a masteroaModuleand are scoped to their parent module.",
      "methods_count": 0
    },
    {
      "id": "oaLumpedElmore",
      "label": "LumpedElmore",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Undo is not supported for oaLumpedElmore objects.",
      "methods_count": 5
    },
    {
      "id": "oaSteinerQuery",
      "label": "SteinerQuery",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 6
    },
    {
      "id": "oaPoleResidue",
      "label": "PoleResidue",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Undo is not supported for oaPoleResidue objects.The oaPoleResidue class can be observed by deriving fromoaObserver<oaPoleResidue>. The oaPoleResidue class can be observed by deriving fromoaObserver...",
      "methods_count": 11
    },
    {
      "id": "oaViaQuery",
      "label": "ViaQuery",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaGuide",
      "label": "Guide",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Guide",
      "description": "The oaGuide class can be observed by deriving fromoaObserver<oaGuide>.",
      "methods_count": 13
    },
    {
      "id": "oaOccInstTerm",
      "label": "OccInstTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "WhenoaInstTermobjects are created in the block domain andoaModInstTermobjects are created in the module domain, corresponding oaOccInstTerm objects are automatically created in the occurrence domai...",
      "methods_count": 26
    },
    {
      "id": "oaOccShape",
      "label": "OccShape",
      "type": "Class",
      "domain": "Physical",
      "concept": "Shape",
      "description": "oaOccArcoaOccDonutoaOccDotoaOccEllipseoaOccLineoaOccPathoaOccPathSegoaOccPolygonoaOccRectoaOccTextoaOccEvalTextoaOccTextDisplayoaOccPropDisplayoaOccAttrDisplayoaOccTextOverrideoaOccInstPropDisplayo...",
      "methods_count": 15
    },
    {
      "id": "oaOccTermArray",
      "label": "OccTermArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaFigGroupQuery",
      "label": "FigGroupQuery",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaModNetTermArray",
      "label": "ModNetTermArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaTextOverride",
      "label": "TextOverride",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "The oaTextOverride display object resides in the same design as theoaInstobject it is associated with.",
      "methods_count": 5
    },
    {
      "id": "oaStdVia",
      "label": "StdVia",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "A standard via may be used as object associated with anoaRoute.A discussion of the creation of oaStdVia objects can be found in theRepresenting Vias in OpenAccesssection of the Programmers Guide. A...",
      "methods_count": 4
    },
    {
      "id": "oaDesignError",
      "label": "DesignError",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaSigType",
      "label": "SigType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaDiode",
      "label": "Diode",
      "type": "Class",
      "domain": "Device",
      "concept": "Diode",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaModObject",
      "label": "ModObject",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaSource",
      "label": "Source",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaScriptEngineLink",
      "label": "ScriptEngineLink",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 5
    },
    {
      "id": "oaTextAlign",
      "label": "TextAlign",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaLayerRangeBlockageQuery",
      "label": "LayerRangeBlockageQuery",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaPcellFileObserver",
      "label": "PcellFileObserver",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "See oaObserver for information on using OpenAccess observer classes to derive and instantiate observers in an application.",
      "methods_count": 6
    },
    {
      "id": "oaOccModuleVectorInstBit",
      "label": "OccModuleVectorInstBit",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaModModuleVectorInstBit",
      "label": "ModModuleVectorInstBit",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "Explicitly-created vectorInstBits define a unique bit of a vectorInst definition since the bits of a vectorInst are not allowed to overlap with other vectorInsts.",
      "methods_count": 10
    },
    {
      "id": "oaTermArray",
      "label": "TermArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaInstHeader",
      "label": "InstHeader",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "An oaInstHeader is an automatic object that is created and destroyed by the database. An oaInstHeader is automatically created whenever the first inst is created. An oaInstHeader is destroyed when ...",
      "methods_count": 15
    },
    {
      "id": "oaModBusNetDef",
      "label": "ModBusNetDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "A busNetDef can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.An busNetDef is automatically ...",
      "methods_count": 13
    },
    {
      "id": "oaTextDisplayIter",
      "label": "TextDisplayIter",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "The following example shows the suggested usage of oaTextDisplayIter:oaTextDisplayIter iter(textDisplay->getTextDisplays());oaTextDisplay*td; while (td = iter.getNext()) { ... } oaTextDisplayIter i...",
      "methods_count": 3
    },
    {
      "id": "oaAnalysisPointArray",
      "label": "AnalysisPointArray",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaMarker",
      "label": "Marker",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Define an array of points to indicate the area or location of the violationAssign a message string that describes the violationAssign a second string that can be used as a tag for the violationAssi...",
      "methods_count": 21
    },
    {
      "id": "oaBusTermDef",
      "label": "BusTermDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "A bus definition can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.An oaBusTermDef is automa...",
      "methods_count": 13
    },
    {
      "id": "oaInstPropDisplay",
      "label": "InstPropDisplay",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "The oaInstPropDisplay is contained in the design that contains the attachedoaInstobject.",
      "methods_count": 4
    },
    {
      "id": "oaPcellObserver",
      "label": "PcellObserver",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.",
      "methods_count": 3
    },
    {
      "id": "oaModTermConnectDef",
      "label": "ModTermConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "Applications that analyze design connectivity must resolve the name of the net to externally connect to the terminal associated with the oaModTermConnectDef. The application searches up the design ...",
      "methods_count": 2
    },
    {
      "id": "oaOccAssignAssignment",
      "label": "OccAssignAssignment",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "This type of connection assignment is useful for integrating a block of intellectual property that contain connection definition. An oaOccAssignAssignment can be used to insure that connectivity tr...",
      "methods_count": 1
    },
    {
      "id": "oaPropDisplay",
      "label": "PropDisplay",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaPropDisplay object is contained in the design database that contains theoaPropobject.",
      "methods_count": 2
    },
    {
      "id": "oaPolygon",
      "label": "Polygon",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "1) No duplicate (coincident) points -- duplicate points throw an exception (useoaPointArray::compressto remove coincident points).2) No collinear edges -- that is, three or more collinear points ar...",
      "methods_count": 6
    },
    {
      "id": "oaFigGroup",
      "label": "FigGroup",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "When a figure belongs to a FigGroup, it does not affect the caller\ufffds ability to access, move, and change the figure as an individual object. It simply adds the ability to manipulate an entire set o...",
      "methods_count": 20
    },
    {
      "id": "oaScalarInst",
      "label": "ScalarInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaScalarInst objects are always in the block domain. They may be physical-only instances that are only in the block hierarchy, or they can be cross-domain instances that directly correspond to anoa...",
      "methods_count": 12
    },
    {
      "id": "oaOccConnectDef",
      "label": "OccConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Conn",
      "description": "The oaOccConnectDef class can be observed by deriving fromoaObserver<oaOccConnectDef>.",
      "methods_count": 1
    },
    {
      "id": "oaFig",
      "label": "Fig",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaOccTerm",
      "label": "OccTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModTerm, oaOccTerm, andoaTermeach represent bus terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaOccTerm, the master is a...",
      "methods_count": 19
    },
    {
      "id": "oaVectorInst",
      "label": "VectorInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaVectorInst objects are always in the block domain. They may be physical-only instances that are only in the block hierarchy, or they can be cross-domain instances that directly correspond to anoa...",
      "methods_count": 15
    },
    {
      "id": "oaModVectorInstBit",
      "label": "ModVectorInstBit",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaVectorInstBitobjects are always in the block domain. They may be physical-only instances that are only in the block hierarchy, or they can be cross-domain instances that directly correspond to an...",
      "methods_count": 10
    },
    {
      "id": "oaRowSpacingType",
      "label": "RowSpacingType",
      "type": "Class",
      "domain": "Layout",
      "concept": "Row",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaAnalysisPoint",
      "label": "AnalysisPoint",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaAnalysisPoint class can be observed by deriving fromoaObserver<oaAnalysisPoint>.",
      "methods_count": 6
    },
    {
      "id": "oaOccInstAttrDisplay",
      "label": "OccInstAttrDisplay",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaModNet",
      "label": "ModNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "oaModNet,oaOccNet, andoaNeteach represent nets in a different kind of master, where in each case, the master represents a level of hierarchy in the design.Note thatoaModNet::getOccNetswill return o...",
      "methods_count": 20
    },
    {
      "id": "oaBitNet",
      "label": "BitNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "You can have two or more bitNets that are equivalent. Equivalent bitNets are traversed separately or logically as the same net.You can create associate a connection definition,oaNetConnectDef, with...",
      "methods_count": 25
    },
    {
      "id": "oaModConnectDef",
      "label": "ModConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Conn",
      "description": "The oaModConnectDef classes are used to allow the actual connection of a ModNet or a ModTerm to be specified by a parent instance in the design hierarchy. That specification is done by creating ano...",
      "methods_count": 2
    },
    {
      "id": "oaCustomVia",
      "label": "CustomVia",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "A Pcell custom via can be created with a subset of the parameters defined in the superMaster. Any parameters not specified will become default parameters which will track changes in the superMaster...",
      "methods_count": 10
    },
    {
      "id": "oaOccTextDisplay",
      "label": "OccTextDisplay",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 10
    },
    {
      "id": "oaDesignAttrType",
      "label": "DesignAttrType",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaModInstTerm",
      "label": "ModInstTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModInstTerm,oaOccInstTerm, andoaInstTermeach represent instances of terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModI...",
      "methods_count": 25
    },
    {
      "id": "oaVia",
      "label": "Via",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "A via may be either a standard via or a custom via. A standard via has a pre-defined set of via parameters that can be tailored to create a variety of vias to cover a variety of connections. The st...",
      "methods_count": 20
    },
    {
      "id": "oaNode",
      "label": "Node",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Nodes are managed objects, but they can be loaded from disk into memory (and unloaded from memory back to disk) on request as part of the parasitic network to which they belong. A pointer to a node...",
      "methods_count": 26
    },
    {
      "id": "oaText",
      "label": "Text",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "The origin of the text and its orientation define a line used for the bottom of normal characters, and the height defines the top of the normal characters. Characters with descenders or ascenders m...",
      "methods_count": 19
    },
    {
      "id": "oaOccBitNet",
      "label": "OccBitNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "You can have two or more bitNets that are equivalent. Equivalent bitNets are traversed separately or logically as the same net.You can create associate a connection definition,oaModNetConnectDef, w...",
      "methods_count": 8
    },
    {
      "id": "oaOccurrence",
      "label": "Occurrence",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaOccurrence class represents an occurrence of anoaBlockand/or anoaModulein the occurrence hierarchy. AnoaDesignmay have zero or one top oaOccurrence. Except for a top occurrence, each oaOccurr...",
      "methods_count": 17
    },
    {
      "id": "oaShape",
      "label": "Shape",
      "type": "Class",
      "domain": "Physical",
      "concept": "Shape",
      "description": "All shapes are placed on anoaLayerand anoaPurpose. The design API identifies these by the layer and purpose numbers. The corresponding names are found in the technology database.Optionally, shapes ...",
      "methods_count": 16
    },
    {
      "id": "oaAreaBlockage",
      "label": "AreaBlockage",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "The area blockage is most commonly used to prevent standard cells from being placed within a certain area.",
      "methods_count": 5
    },
    {
      "id": "oaBoundary",
      "label": "Boundary",
      "type": "Class",
      "domain": "Layout",
      "concept": "Boundary",
      "description": "Two coincident and three collinear points are illegal, and if detected, cause an exception to be thrown. You can useoaPointArray::compress()to remove these combinations.The oaBoundary class can be ...",
      "methods_count": 9
    },
    {
      "id": "oaViaHeader",
      "label": "ViaHeader",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "A viaHeader is automatically created whenever the first via of a particular viaDef is created. A viaHeader is destroyed when the last via using the viaDef is destroyed.The oaViaHeader class can be ...",
      "methods_count": 6
    },
    {
      "id": "oaBusNet",
      "label": "BusNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "Bus nets are named by the oaBusName convention, that is, it has a baseName and the start, stop, step value. A bus net object can be viewed as a collection of single bit logical connections.An examp...",
      "methods_count": 14
    },
    {
      "id": "oaBlock",
      "label": "Block",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "The oaBlock class is a container for the physical implementation of a design. There is at most one oaBlock object per design which contains all the figures for its design. An oaBlock also contains ...",
      "methods_count": 52
    },
    {
      "id": "oaPcellLink",
      "label": "PcellLink",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 5
    },
    {
      "id": "oaPathSeg",
      "label": "PathSeg",
      "type": "Class",
      "domain": "Physical",
      "concept": "Path",
      "description": "",
      "methods_count": 12
    },
    {
      "id": "oaBusTerm",
      "label": "BusTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 14
    },
    {
      "id": "oaDesignException",
      "label": "DesignException",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaPinFig",
      "label": "PinFig",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaPcellDef",
      "label": "PcellDef",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "An oaPcellDef is used byoaDesign::defineSuperMaster()to turn anoaDesigninto a SuperMaster. The oaPcellDef can be returned from that SuperMaster withoaDesign::getPcellDef().The oaPcellDef class also...",
      "methods_count": 5
    },
    {
      "id": "oaEvalText",
      "label": "EvalText",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 6
    },
    {
      "id": "oaModBitTerm",
      "label": "ModBitTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "You can create associate a connection definition,oaModTermConnectDef, with a bitTerm.",
      "methods_count": 1
    },
    {
      "id": "oaCustomViaHeader",
      "label": "CustomViaHeader",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "SuperHeadersrepresent all of the instances of a Pcell master, regardless of parameter settingsSubHeadersrepresent all of the instances that have one specific set of parameter valuesEvery custom via...",
      "methods_count": 8
    },
    {
      "id": "oaScanChainInst",
      "label": "ScanChainInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "The oaScanChainInst class can be observed by deriving fromoaObserver<oaScanChainInst>.",
      "methods_count": 10
    },
    {
      "id": "oaOccNetConnectDef",
      "label": "OccNetConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaAssignmentAttrType",
      "label": "AssignmentAttrType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaPinConnectMethod",
      "label": "PinConnectMethod",
      "type": "Class",
      "domain": "Physical",
      "concept": "Pin",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 3
    },
    {
      "id": "oaInstTerm",
      "label": "InstTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "InstTerms can exist that do not have a proper corresponding terminal in the master of the instance. This allows instTerms to be created when the instance master is not read in, and it allows change...",
      "methods_count": 30
    },
    {
      "id": "oaClusterBoundary",
      "label": "ClusterBoundary",
      "type": "Class",
      "domain": "Layout",
      "concept": "Boundary",
      "description": "",
      "methods_count": 8
    },
    {
      "id": "oaOccLine",
      "label": "OccLine",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaReducedModel",
      "label": "ReducedModel",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "ReducedModels are used as simplified representations of the electrical behavior of a net in order to be smaller and faster for delay calculation than a full detailed parasitic model. Reduced models...",
      "methods_count": 6
    },
    {
      "id": "oaFigGroupMem",
      "label": "FigGroupMem",
      "type": "Class",
      "domain": "Physical",
      "concept": "Fig",
      "description": "",
      "methods_count": 6
    },
    {
      "id": "oaOccPath",
      "label": "OccPath",
      "type": "Class",
      "domain": "Physical",
      "concept": "Path",
      "description": "",
      "methods_count": 8
    },
    {
      "id": "oaVectorInstBit",
      "label": "VectorInstBit",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaVectorInstBit objects are always in the block domain. They can be physical-only instances that are only in the block hierarchy or they can be cross-domain instances that directly correspond to an...",
      "methods_count": 12
    },
    {
      "id": "oaTermAttrType",
      "label": "TermAttrType",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaOccBusNet",
      "label": "OccBusNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 13
    },
    {
      "id": "oaCellType",
      "label": "CellType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaPathStyle",
      "label": "PathStyle",
      "type": "Class",
      "domain": "Physical",
      "concept": "Path",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaOccNet",
      "label": "OccNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "oaOccNet objects are always in the occurrence domain. Nets span the domains in a design. An oaOccNet may be an occurrence of anoaNetin the block hierarchy and may be an occurrence of anoaModNetin t...",
      "methods_count": 21
    },
    {
      "id": "oaModMemNetCollection",
      "label": "ModMemNetCollection",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "The oaModMemNetCollection class is a specialized collection class because theoaModMemNetIterused to iterate over it does not have the standard getNext signature use by the template collection class...",
      "methods_count": 1
    },
    {
      "id": "oaArc",
      "label": "Arc",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "How Arcs are Specified in OpenAccessIn OpenAccess, arc angles are specified in positive radians, and are defined counterclockwise from a reference line that emanates from the center of the ellipse ...",
      "methods_count": 11
    },
    {
      "id": "oaEllipse",
      "label": "Ellipse",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 5
    },
    {
      "id": "oaInst",
      "label": "Inst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaInst objects are always in the block domain. Thus they are contained in anoaBlockobject. An oaInst may have one or more equivalent module instances in the module hierarchy and will have an equiva...",
      "methods_count": 35
    },
    {
      "id": "oaAttrDisplay",
      "label": "AttrDisplay",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaAttrDisplay is contained in the design that contains the attached design object.Note:The attribute is specified using one of many defined values. Each object type has its own set of values. N...",
      "methods_count": 5
    },
    {
      "id": "oaOccBusTermDef",
      "label": "OccBusTermDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "A bus definition can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.The bit order of an expli...",
      "methods_count": 12
    },
    {
      "id": "oaBitInst",
      "label": "BitInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaFont",
      "label": "Font",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaAssignAssignment",
      "label": "AssignAssignment",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "This type of connection assignment is useful for integrating a block of intellectual property that contain connection definition. An oaAssignAssignment can be used to insure that connectivity trave...",
      "methods_count": 3
    },
    {
      "id": "oaDesignArray",
      "label": "DesignArray",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaConnectDef",
      "label": "ConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Conn",
      "description": "The oaConnectDef classes allow you to specify that the net name of a connection may be assigned a different name. The new name is specified by a correspondingoaAssignment. If there is no correspond...",
      "methods_count": 2
    },
    {
      "id": "oaOccScalarInst",
      "label": "OccScalarInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaOccScalarInst objects are always in the occurrence domain.",
      "methods_count": 9
    },
    {
      "id": "oaInstTermAttrType",
      "label": "InstTermAttrType",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaOccVectorInst",
      "label": "OccVectorInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaOccVectorInst objects are always in the occurrence domain.",
      "methods_count": 13
    },
    {
      "id": "oaInductor",
      "label": "Inductor",
      "type": "Class",
      "domain": "Device",
      "concept": "Inductor",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaNetTermNameArray",
      "label": "NetTermNameArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaInstAttrDisplay",
      "label": "InstAttrDisplay",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "TheoaAttrDisplayis contained in the design that contains the attachedoaInstobject.",
      "methods_count": 5
    },
    {
      "id": "oaOccBitTerm",
      "label": "OccBitTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaRouteOptimizer",
      "label": "RouteOptimizer",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "During optimization, Steiner objects are created and deleted as required. When optimization is complete, the optimized routes cover exactly the same area covered by the original path segments and r...",
      "methods_count": 3
    },
    {
      "id": "oaModNetTermPosArray",
      "label": "ModNetTermPosArray",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaModAssignValue",
      "label": "ModAssignValue",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "the name of the net to use in place of the name of the net associated with the correspondingoaModNetConnectDefobjectthe name of the net to use to externally connect to the terminal associated with ...",
      "methods_count": 5
    },
    {
      "id": "oaPinType",
      "label": "PinType",
      "type": "Class",
      "domain": "Physical",
      "concept": "Pin",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaScanChain",
      "label": "ScanChain",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Scan chains often get special treatment by place and route tools which can take advantage of the fact that their detailed order and partitioning into individual scan chains can be done late in the ...",
      "methods_count": 14
    },
    {
      "id": "oaDot",
      "label": "Dot",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 7
    },
    {
      "id": "oaNetAttrType",
      "label": "NetAttrType",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaOccTermConnectDef",
      "label": "OccTermConnectDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaOccTextOverride",
      "label": "OccTextOverride",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 4
    },
    {
      "id": "oaPiPoleResidue",
      "label": "PiPoleResidue",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Undo is not supported for oaPiPoleResidue objects.",
      "methods_count": 11
    },
    {
      "id": "oaOccModuleBitInst",
      "label": "OccModuleBitInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaAssignmentDef",
      "label": "AssignmentDef",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "When an oaAssignmentDef is used with anoaNetConnectDef, the default net name specifies the name to default to for the net if a corresponding assignment is not found.When an oaAssignmentDef is used ...",
      "methods_count": 5
    },
    {
      "id": "oaOccDonut",
      "label": "OccDonut",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 5
    },
    {
      "id": "oaDesignObject",
      "label": "DesignObject",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "There is a substantial tree of classes derived from oaDesignObject. For most of these classes, an oaDesignObject can be classified using itsoaTypevalue. SeeoaObject::getTypefor more information. Fo...",
      "methods_count": 8
    },
    {
      "id": "oaDesignUndoObserver",
      "label": "DesignUndoObserver",
      "type": "Class",
      "domain": "Physical",
      "concept": "Design",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaOccInstHeader",
      "label": "OccInstHeader",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "SuperHeadersrepresent all of the instances of a Pcell master, regardless of parameter settingsSubHeadersrepresent all of the instances that have one specific set of parameter valuesEvery instance o...",
      "methods_count": 17
    },
    {
      "id": "oaDesignViaVariantHeader",
      "label": "DesignViaVariantHeader",
      "type": "Class",
      "domain": "Physical",
      "concept": "Via",
      "description": "",
      "methods_count": 1
    },
    {
      "id": "oaPlacementStatus",
      "label": "PlacementStatus",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaOccModuleInst",
      "label": "OccModuleInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaModTerm",
      "label": "ModTerm",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "oaModTerm,oaOccTerm, andoaTermeach represent terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModTerm, the master is anoaMo...",
      "methods_count": 22
    },
    {
      "id": "oaOccTraverser",
      "label": "OccTraverser",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Thetraverse()function initiates the traversal, which can be controlled by a set of flags bits accessed by theflags()function. During the traversal, the virtual functions process*() are called for e...",
      "methods_count": 8
    },
    {
      "id": "oaMarkerSeverity",
      "label": "MarkerSeverity",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaSegStyle",
      "label": "SegStyle",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "Its supporting classes includes theoaEndStyleclass, which implements an enumerated type representing the different styles the end of a path segment may have.",
      "methods_count": 15
    },
    {
      "id": "oaOccScalarNet",
      "label": "OccScalarNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaStdDevice",
      "label": "StdDevice",
      "type": "Class",
      "domain": "Device",
      "concept": "Device",
      "description": "",
      "methods_count": 6
    },
    {
      "id": "oaModInstHeader",
      "label": "ModInstHeader",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "SuperHeadersrepresent all of the instances of a Pcell master, regardless of parameter settingsSubHeadersrepresent all of the instances that have one specific set of parameter valuesEvery instance o...",
      "methods_count": 18
    },
    {
      "id": "oaBusNetBit",
      "label": "BusNetBit",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "An oaBusNetBit can be explicitly created and used in other operations like creating terminals or instTerms. An explicitly created busNetBit must be explicitly destroyed.",
      "methods_count": 10
    },
    {
      "id": "oaClusterType",
      "label": "ClusterType",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaCouplingCap",
      "label": "CouplingCap",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "A coupling capacitor between two nodes in the same parasitic network is considered alocalcoupling cap. Local coupling caps have a single representation in the database. When a coupling capacitor ph...",
      "methods_count": 10
    },
    {
      "id": "oaOccProducer",
      "label": "OccProducer",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The virtualproduce()method initiates the producer. Overriding the produce function in a derivation class will enable custom ordering for the process*() set of functions.Header filtering of instance...",
      "methods_count": 30
    },
    {
      "id": "oaOccBundleNet",
      "label": "OccBundleNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 13
    },
    {
      "id": "oaModModuleInst",
      "label": "ModModuleInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaModModuleInst objects refer to a masteroaModuleand are scoped to their parent module.",
      "methods_count": 1
    },
    {
      "id": "oaMarkerQuery",
      "label": "MarkerQuery",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaBundleNet",
      "label": "BundleNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "An oaBundleNet object can be viewed as a collection of single bit net members and represents a collection of logical connections. The index and ordering of each member of a bundle net is indicated ...",
      "methods_count": 11
    },
    {
      "id": "oaOccBusNetBit",
      "label": "OccBusNetBit",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "oaModBusNetBit, oaOccBusNetmBit, andoaBusNetBiteach represent a bit of a busNet on a different kind of master, where in each case the master represents a level of hierarchy in the design.ForoaModBu...",
      "methods_count": 11
    },
    {
      "id": "oaDevice",
      "label": "Device",
      "type": "Class",
      "domain": "Device",
      "concept": "Device",
      "description": "Devices are managed objects, but they can be loaded from disk into memory (and unloaded from memory back to disk) on request as part of the parasitic network to which they belong. Therefore, databa...",
      "methods_count": 14
    },
    {
      "id": "IRegionQueryPlugMgr",
      "label": "IRegionQueryPlugMgr",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 15
    },
    {
      "id": "oaRowQuery",
      "label": "RowQuery",
      "type": "Class",
      "domain": "Layout",
      "concept": "Row",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaTrackPattern",
      "label": "TrackPattern",
      "type": "Class",
      "domain": "Layout",
      "concept": "Track",
      "description": "Track patterns are similar to RouteGridPitch and RouteGridOffset constraints (see the built-in Routing constraint section inCreating and Modeling Process Rules and Constraintsin the Programmers Gui...",
      "methods_count": 15
    },
    {
      "id": "oaOccModuleVectorInst",
      "label": "OccModuleVectorInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaOccModuleVectorInst objects refer to master module and are always in the occurrence domain.",
      "methods_count": 12
    },
    {
      "id": "oaRoutePattern",
      "label": "RoutePattern",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Route",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaScalarNet",
      "label": "ScalarNet",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 8
    },
    {
      "id": "oaAssignValue",
      "label": "AssignValue",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "the name of the net to use in place of the name of the net associated with the correspondingoaNetConnectDefobjectthe name of the net to use to externally connect to the terminal associated with the...",
      "methods_count": 5
    },
    {
      "id": "oaOccModuleScalarInst",
      "label": "OccModuleScalarInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 8
    },
    {
      "id": "oaTextDisplayFormat",
      "label": "TextDisplayFormat",
      "type": "Class",
      "domain": "Physical",
      "concept": "Text",
      "description": "",
      "methods_count": 2
    },
    {
      "id": "oaNetTermPair",
      "label": "NetTermPair",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Net",
      "description": "",
      "methods_count": 9
    },
    {
      "id": "oaModScalarInst",
      "label": "ModScalarInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "oaModScalarInst objects are always in the module domain.",
      "methods_count": 10
    },
    {
      "id": "oaRowFlipType",
      "label": "RowFlipType",
      "type": "Class",
      "domain": "Layout",
      "concept": "Row",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaModVectorInst",
      "label": "ModVectorInst",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "An oaModVectorInst object is always in the module domain. It is an instance of a design as opposed to anoaModModuleVectorInst, which is a vector instance of a local module.",
      "methods_count": 13
    },
    {
      "id": "oaOccRect",
      "label": "OccRect",
      "type": "Class",
      "domain": "Physical",
      "concept": "Rect",
      "description": "",
      "methods_count": 0
    },
    {
      "id": "oaOccVectorInstDef",
      "label": "OccVectorInstDef",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "The bit order of an explicit oaOccVectorInstDef is independent of the order within individual oaOccVectorInsts with the same base name. Verilog requires a single wire declaration for a given base n...",
      "methods_count": 12
    },
    {
      "id": "oaMarkerDeleteWhen",
      "label": "MarkerDeleteWhen",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaEndStyle",
      "label": "EndStyle",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaEndStyle class is an enum wrapper class for oaEndStyleEnum values.SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers. SeeEnum Wrappersin the Programmers Guide for a di...",
      "methods_count": 2
    },
    {
      "id": "oaCluster",
      "label": "Cluster",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "The oaCluster class can be observed by deriving fromoaObserver<oaCluster>.",
      "methods_count": 15
    },
    {
      "id": "oaDonut",
      "label": "Donut",
      "type": "Class",
      "domain": "Other",
      "concept": "Unknown",
      "description": "",
      "methods_count": 12
    },
    {
      "id": "oaGuideQuery",
      "label": "GuideQuery",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Guide",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaOccModuleInstHeader",
      "label": "OccModuleInstHeader",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "The oaOccModuleInstHeader class can be observed by deriving fromoaObserver<oaOccModuleInstHeader>.",
      "methods_count": 7
    },
    {
      "id": "oaBlockDomainVisibility",
      "label": "BlockDomainVisibility",
      "type": "Class",
      "domain": "Physical",
      "concept": "Block",
      "description": "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.",
      "methods_count": 2
    },
    {
      "id": "oaModBusTermDef",
      "label": "ModBusTermDef",
      "type": "Class",
      "domain": "Connectivity",
      "concept": "Term",
      "description": "A bus definition can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.An oaModBusTermDef is aut...",
      "methods_count": 13
    },
    {
      "id": "oaOccInstPropDisplay",
      "label": "OccInstPropDisplay",
      "type": "Class",
      "domain": "Hierarchy",
      "concept": "Inst",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaBoundaryQuery",
      "label": "BoundaryQuery",
      "type": "Class",
      "domain": "Layout",
      "concept": "Boundary",
      "description": "",
      "methods_count": 3
    },
    {
      "id": "oaHierPath",
      "label": "HierPath",
      "type": "Class",
      "domain": "Physical",
      "concept": "Path",
      "description": "",
      "methods_count": 11
    }
  ],
  "links": [
    {
      "source": "oaModule",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModule",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRoute",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRoute",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRoute",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRoute",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNet",
      "target": "oaModNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNet",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTermBit",
      "target": "oaOccBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTermBit",
      "target": "oaOccTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTermBit",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTermBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccMemNetIter",
      "target": "oaBaseMemNetIter",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaAttrDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaInstAttrDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaInstPropDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaPropDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextDisplay",
      "target": "oaTextOverride",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaElmore",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRect",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRect",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRect",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRect",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRect",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRect",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrType",
      "target": "oaAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTerm",
      "target": "oaOccTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTerm",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPathSeg",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPathSeg",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPathSeg",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArrayInst",
      "target": "oaOccBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArrayInst",
      "target": "oaOccDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArrayInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArrayInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArrayInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPin",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPin",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNetConnectDef",
      "target": "oaModConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNetConnectDef",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNetConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaBlock",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaBusNetDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaBusTermDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaCluster",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaCMap",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaFigGroupMem",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaGCellPattern",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaInstTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaLayerHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaLPPHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaPin",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaRefHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaRowHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaScanChain",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaScanChainInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaScanChainSet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaTrackPattern",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockObject",
      "target": "oaVectorInstDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitNet",
      "target": "oaModNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitNet",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitNet",
      "target": "oaModBusNetBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitNet",
      "target": "oaModScalarNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBundleTerm",
      "target": "oaModTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBundleTerm",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBundleTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignUndoObserverBase",
      "target": "oaDesignUndoObserver",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBaseMemNetCollection",
      "target": "oaMemNetCollection",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBaseMemNetCollection",
      "target": "oaModMemNetCollection",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBaseMemNetCollection",
      "target": "oaOccMemNetCollection",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRowHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRowHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitInst",
      "target": "oaModDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitInst",
      "target": "oaModScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitInst",
      "target": "oaModVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignment",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignment",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignment",
      "target": "oaAssignAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignment",
      "target": "oaAssignValue",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArrayInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaModBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaModVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaModScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModDesignInst",
      "target": "oaModVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRow",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRow",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRow",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNetDef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNetDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBundleTerm",
      "target": "oaOccTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBundleTerm",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBundleTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMutualInductor",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMutualInductor",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCMap",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCMap",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockageQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAnalysisOpPoint",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSnapBoundary",
      "target": "oaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSnapBoundary",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSnapBoundary",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSnapBoundary",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPiElmore",
      "target": "oaReducedModel",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPiElmore",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccArrayInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDesignInst",
      "target": "oaOccVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRefHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRefHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRefHeader",
      "target": "oaInstHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRefHeader",
      "target": "oaViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRefHeader",
      "target": "oaCustomViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRefHeader",
      "target": "oaStdViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaBlockageQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaBoundaryQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaFigGroupQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaGuideQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaInstQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaLayerRangeBlockageQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaMarkerQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaPlacementBlockageQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaRowQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaShapeQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaSteinerQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRegionQuery",
      "target": "oaViaQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNetDef",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNetDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetTermArrayBase",
      "target": "oaModNetTermArray",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetTermArrayBase",
      "target": "oaModNetTermNameArray",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetTermArrayBase",
      "target": "oaModNetTermPosArray",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetTermArrayBase",
      "target": "oaNetTermArray",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetTermArrayBase",
      "target": "oaNetTermNameArray",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetTermArrayBase",
      "target": "oaNetTermPosArray",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstBit",
      "target": "oaOccBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstBit",
      "target": "oaOccDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstBit",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstBit",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccModuleVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccArrayInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccModuleScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInst",
      "target": "oaOccModuleVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarTerm",
      "target": "oaBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarTerm",
      "target": "oaTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarTerm",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignAssignment",
      "target": "oaModAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignAssignment",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignAssignment",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetConnectDef",
      "target": "oaConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetConnectDef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShapeQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMemNetCollection",
      "target": "oaBaseMemNetCollection",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPolygon",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPolygon",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPolygon",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerBlockage",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerBlockage",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerBlockage",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerBlockage",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccBusNetDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccBusTermDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccInstHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccInstTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccModuleInstHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccurrence",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccObject",
      "target": "oaOccVectorInstDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTermBit",
      "target": "oaModBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTermBit",
      "target": "oaModTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTermBit",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTermBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModMemNetIter",
      "target": "oaBaseMemNetIter",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeHalo",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeHalo",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeHalo",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeHalo",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPropDisplay",
      "target": "oaOccTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPropDisplay",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPropDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPropDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSubNetwork",
      "target": "oaFig",
      "type": "CONNECTS",
      "weight": 5,
      "method": "getFig",
      "concept": "Fig"
    },
    {
      "source": "oaSubNetwork",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaAreaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaAreaHalo",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaLayerBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaLayerHalo",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaLayerRangeBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlockage",
      "target": "oaLayerRangeHalo",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerHalo",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerHalo",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerHalo",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerHalo",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeBlockage",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeBlockage",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeBlockage",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeBlockage",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBoundary",
      "target": "oaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBoundary",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBoundary",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBoundary",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarNet",
      "target": "oaModBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarNet",
      "target": "oaModNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarNet",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleScalarInst",
      "target": "oaModModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleScalarInst",
      "target": "oaModModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleScalarInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleScalarInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleScalarInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDot",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDot",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDot",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInst",
      "target": "oaModModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBundleNet",
      "target": "oaModNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBundleNet",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBundleNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGCellPattern",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGCellPattern",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignment",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignment",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignment",
      "target": "oaOccAssignAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignment",
      "target": "oaOccAssignValue",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNetBit",
      "target": "oaModBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNetBit",
      "target": "oaModNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNetBit",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNetBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPlacementBlockageQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLine",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLine",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLine",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLine",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLine",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLine",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPath",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPath",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPath",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPath",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPath",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPath",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSeriesRL",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSeriesRL",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModModuleVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModModuleScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInst",
      "target": "oaModModuleVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignValue",
      "target": "oaOccAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignValue",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignValue",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLPPHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLPPHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGroundedNode",
      "target": "oaNode",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGroundedNode",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArc",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArc",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccArc",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaBundleNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaBusNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaBusNetBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNet",
      "target": "oaScalarNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInstHeader",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInstHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMemNetIter",
      "target": "oaBaseMemNetIter",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaCustomVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaStdVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaArrayInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRef",
      "target": "oaVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPRBoundary",
      "target": "oaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPRBoundary",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPRBoundary",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPRBoundary",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesign",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTermBit",
      "target": "oaBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTermBit",
      "target": "oaTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTermBit",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTermBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccText",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccText",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccText",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccText",
      "target": "oaOccEvalText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScanChainSet",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScanChainSet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstDef",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaNet",
      "type": "ON",
      "weight": 4,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaConnFig",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaGuide",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaRoute",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaSteiner",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaArc",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaDonut",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaDot",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaEllipse",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaLine",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaPath",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaPathSeg",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaPolygon",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaRect",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnFig",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarTerm",
      "target": "oaModBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarTerm",
      "target": "oaModTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarTerm",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEllipse",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEllipse",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEllipse",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaHalo",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaHalo",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaHalo",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaHalo",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaOccDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaOccArrayInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaOccScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitInst",
      "target": "oaOccVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAttrDisplay",
      "target": "oaOccTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAttrDisplay",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAttrDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAttrDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarTerm",
      "target": "oaOccBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarTerm",
      "target": "oaOccTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarTerm",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccMemNetCollection",
      "target": "oaBaseMemNetCollection",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitTerm",
      "target": "oaTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitTerm",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitTerm",
      "target": "oaBusTermBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitTerm",
      "target": "oaScalarTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaParasiticNetwork",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaNet",
      "type": "HAS",
      "weight": 3,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaTerm",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaBundleTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaBusTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaBusTermBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTerm",
      "target": "oaScalarTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSteiner",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSteiner",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSteiner",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSteiner",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTermConnectDef",
      "target": "oaConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTermConnectDef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTermConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTerm",
      "target": "oaModTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTerm",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignment",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignment",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignment",
      "target": "oaModAssignAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignment",
      "target": "oaModAssignValue",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdViaHeader",
      "target": "oaViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdViaHeader",
      "target": "oaRefHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdViaHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdViaHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBundleTerm",
      "target": "oaTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBundleTerm",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBundleTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEvalText",
      "target": "oaOccText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEvalText",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEvalText",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccEvalText",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrType",
      "target": "oaAssignmentAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrType",
      "target": "oaDesignAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrType",
      "target": "oaInstAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrType",
      "target": "oaInstTermAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrType",
      "target": "oaNetAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrType",
      "target": "oaTermAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOpPointHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaResistor",
      "target": "oaStdDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaResistor",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaResistor",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBaseMemNetIter",
      "target": "oaMemNetIter",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBaseMemNetIter",
      "target": "oaModMemNetIter",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBaseMemNetIter",
      "target": "oaOccMemNetIter",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstDef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleBitInst",
      "target": "oaModModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleBitInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleBitInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleBitInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleBitInst",
      "target": "oaModModuleScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleBitInst",
      "target": "oaModModuleVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLumpedElmore",
      "target": "oaReducedModel",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLumpedElmore",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaSteinerQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPoleResidue",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaViaQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGuide",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGuide",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGuide",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGuide",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstTerm",
      "target": "oaInstTerm",
      "type": "HAS",
      "weight": 3,
      "method": "getInstTerm",
      "concept": "InstTerm"
    },
    {
      "source": "oaOccInstTerm",
      "target": "oaOccNet",
      "type": "HAS",
      "weight": 3,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaOccInstTerm",
      "target": "oaOccTerm",
      "type": "CONNECTS_TO",
      "weight": 5,
      "method": "getTerm",
      "concept": "Term"
    },
    {
      "source": "oaOccInstTerm",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaNet",
      "type": "ON",
      "weight": 4,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaOccShape",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccArc",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccDonut",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccDot",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccEllipse",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccLine",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccPath",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccPathSeg",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccPolygon",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccRect",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccShape",
      "target": "oaOccTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFigGroupQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTextOverride",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdVia",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignError",
      "target": "oaDesignException",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDiode",
      "target": "oaStdDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDiode",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDiode",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModBusNetDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModBusTermDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModInstHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModInstTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModModuleInstHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModule",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModObject",
      "target": "oaModVectorInstDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaLayerRangeBlockageQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInstBit",
      "target": "oaOccModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInstBit",
      "target": "oaOccModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInstBit",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInstBit",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInstBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInstBit",
      "target": "oaModModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInstBit",
      "target": "oaModModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInstBit",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInstBit",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleVectorInstBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstHeader",
      "target": "oaRefHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNetDef",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusNetDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMarker",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMarker",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMarker",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTermDef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTermDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstPropDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTermConnectDef",
      "target": "oaModConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTermConnectDef",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTermConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignAssignment",
      "target": "oaOccAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignAssignment",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccAssignAssignment",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPropDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPolygon",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPolygon",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPolygon",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPolygon",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPolygon",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPolygon",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFigGroup",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFigGroup",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFigGroup",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccConnectDef",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccConnectDef",
      "target": "oaOccNetConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccConnectDef",
      "target": "oaOccTermConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaFigGroup",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaMarker",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaRow",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaAreaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaAreaHalo",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaLayerBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaLayerHalo",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaLayerRangeBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaLayerRangeHalo",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaAreaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaClusterBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaPRBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaSnapBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaGuide",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaRoute",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFig",
      "target": "oaSteiner",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccNet",
      "type": "HAS",
      "weight": 3,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccBundleTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccBusTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccBusTermBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTerm",
      "target": "oaOccScalarTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstBit",
      "target": "oaModBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstBit",
      "target": "oaModDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstBit",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstBit",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInstBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAnalysisPoint",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstAttrDisplay",
      "target": "oaOccTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstAttrDisplay",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstAttrDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstAttrDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaModBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaModBundleNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaModBusNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaModBusNetBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModNet",
      "target": "oaModScalarNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitNet",
      "target": "oaNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitNet",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitNet",
      "target": "oaBusNetBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitNet",
      "target": "oaScalarNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModConnectDef",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModConnectDef",
      "target": "oaModNetConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModConnectDef",
      "target": "oaModTermConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomVia",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaOccAttrDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaOccInstAttrDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaOccInstPropDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaOccPropDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextDisplay",
      "target": "oaOccTextOverride",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignAttrType",
      "target": "oaAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInstTerm",
      "target": "oaModNet",
      "type": "HAS",
      "weight": 3,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaModInstTerm",
      "target": "oaModTerm",
      "type": "CONNECTS_TO",
      "weight": 5,
      "method": "getTerm",
      "concept": "Term"
    },
    {
      "source": "oaModInstTerm",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInstTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaCustomVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVia",
      "target": "oaStdVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNode",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNode",
      "target": "oaGroundedNode",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaText",
      "target": "oaEvalText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitNet",
      "target": "oaOccNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitNet",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitNet",
      "target": "oaOccBusNetBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitNet",
      "target": "oaOccScalarNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccurrence",
      "target": "oaOccInst",
      "type": "CONTAINS",
      "weight": 5,
      "method": "getOccInst",
      "concept": "OccInst"
    },
    {
      "source": "oaOccurrence",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccurrence",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaArc",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaDonut",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaDot",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaEllipse",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaLine",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaPath",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaPathSeg",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaPolygon",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaRect",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaShape",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBlockage",
      "target": "oaBlockage",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBlockage",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBlockage",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAreaBlockage",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaAreaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaClusterBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaPRBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundary",
      "target": "oaSnapBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaViaHeader",
      "target": "oaRefHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaViaHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaViaHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaViaHeader",
      "target": "oaCustomViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaViaHeader",
      "target": "oaStdViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNet",
      "target": "oaNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNet",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlock",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBlock",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPathSeg",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPathSeg",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPathSeg",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPathSeg",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPathSeg",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPathSeg",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTerm",
      "target": "oaTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTerm",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignException",
      "target": "oaDesignError",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaVia",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaArc",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaDonut",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaDot",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaEllipse",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaLine",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaPath",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaPathSeg",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaPolygon",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaRect",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPinFig",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaText",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEvalText",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitTerm",
      "target": "oaModTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitTerm",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitTerm",
      "target": "oaModBusTermBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBitTerm",
      "target": "oaModScalarTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomViaHeader",
      "target": "oaViaHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomViaHeader",
      "target": "oaRefHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomViaHeader",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCustomViaHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScanChainInst",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScanChainInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNetConnectDef",
      "target": "oaOccConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNetConnectDef",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNetConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignmentAttrType",
      "target": "oaAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstTerm",
      "target": "oaNet",
      "type": "HAS",
      "weight": 3,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaInstTerm",
      "target": "oaTerm",
      "type": "CONNECTS_TO",
      "weight": 5,
      "method": "getTerm",
      "concept": "Term"
    },
    {
      "source": "oaInstTerm",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaClusterBoundary",
      "target": "oaBoundary",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaClusterBoundary",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaClusterBoundary",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaClusterBoundary",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccLine",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccLine",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccLine",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaReducedModel",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaReducedModel",
      "target": "oaLumpedElmore",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaReducedModel",
      "target": "oaPiElmore",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaReducedModel",
      "target": "oaPiPoleResidue",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFigGroupMem",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaFigGroupMem",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPath",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPath",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccPath",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaVectorInstBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTermAttrType",
      "target": "oaAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNet",
      "target": "oaOccNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNet",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaOccBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaOccBundleNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaOccBusNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaOccBusNetBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccNet",
      "target": "oaOccScalarNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModMemNetCollection",
      "target": "oaBaseMemNetCollection",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArc",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArc",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArc",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArc",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArc",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaArc",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEllipse",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEllipse",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEllipse",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEllipse",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEllipse",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaEllipse",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaArrayInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInst",
      "target": "oaVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAttrDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTermDef",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusTermDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaRef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaArrayInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBitInst",
      "target": "oaVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignAssignment",
      "target": "oaAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignAssignment",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignAssignment",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnectDef",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnectDef",
      "target": "oaNetConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaConnectDef",
      "target": "oaTermConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarInst",
      "target": "oaOccBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarInst",
      "target": "oaOccDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstTermAttrType",
      "target": "oaAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInst",
      "target": "oaOccDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInductor",
      "target": "oaStdDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInductor",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInductor",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaInstAttrDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitTerm",
      "target": "oaOccTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitTerm",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitTerm",
      "target": "oaOccBusTermBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBitTerm",
      "target": "oaOccScalarTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignValue",
      "target": "oaModAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignValue",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModAssignValue",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScanChain",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScanChain",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDot",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDot",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDot",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDot",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDot",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDot",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaNetAttrType",
      "target": "oaAttrType",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTermConnectDef",
      "target": "oaOccConnectDef",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTermConnectDef",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTermConnectDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextOverride",
      "target": "oaOccTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextOverride",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextOverride",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTextOverride",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPiPoleResidue",
      "target": "oaReducedModel",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaPiPoleResidue",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleBitInst",
      "target": "oaOccModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleBitInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleBitInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleBitInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleBitInst",
      "target": "oaOccModuleScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleBitInst",
      "target": "oaOccModuleVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDonut",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDonut",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccDonut",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaAnalysisOpPoint",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaAnalysisPoint",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaDesign",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaElmore",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaNode",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaOpPointHeader",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaParasiticNetwork",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaPoleResidue",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaReducedModel",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignObject",
      "target": "oaSubNetwork",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDesignUndoObserver",
      "target": "oaDesignUndoObserverBase",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstHeader",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaOccModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaOccModuleVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaOccModuleScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInst",
      "target": "oaOccModuleVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaModNet",
      "type": "HAS",
      "weight": 3,
      "method": "getNet",
      "concept": "Net"
    },
    {
      "source": "oaModTerm",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaModBitTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaModBundleTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaModBusTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaModBusTermBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModTerm",
      "target": "oaModScalarTerm",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccTraverser",
      "target": "oaOccProducer",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarNet",
      "target": "oaOccBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarNet",
      "target": "oaOccNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarNet",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccScalarNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdDevice",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdDevice",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdDevice",
      "target": "oaCouplingCap",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdDevice",
      "target": "oaDiode",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdDevice",
      "target": "oaInductor",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaStdDevice",
      "target": "oaResistor",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInstHeader",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModInstHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNetBit",
      "target": "oaBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNetBit",
      "target": "oaNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNetBit",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBusNetBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCouplingCap",
      "target": "oaStdDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCouplingCap",
      "target": "oaDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCouplingCap",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccProducer",
      "target": "oaOccTraverser",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBundleNet",
      "target": "oaOccNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBundleNet",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBundleNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaModModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaModModuleVectorInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaModModuleScalarInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModModuleInst",
      "target": "oaModModuleVectorInstBit",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaMarkerQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBundleNet",
      "target": "oaNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBundleNet",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBundleNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNetBit",
      "target": "oaOccBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNetBit",
      "target": "oaOccNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNetBit",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccBusNetBit",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaMutualInductor",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaSeriesRL",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaStdDevice",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaCouplingCap",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaDiode",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaInductor",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDevice",
      "target": "oaResistor",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaRowQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTrackPattern",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaTrackPattern",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInst",
      "target": "oaOccModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleVectorInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarNet",
      "target": "oaBitNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarNet",
      "target": "oaNet",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarNet",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaScalarNet",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignValue",
      "target": "oaAssignment",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignValue",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaAssignValue",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleScalarInst",
      "target": "oaOccModuleBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleScalarInst",
      "target": "oaOccModuleInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleScalarInst",
      "target": "oaOccInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleScalarInst",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleScalarInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarInst",
      "target": "oaModBitInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarInst",
      "target": "oaModDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModScalarInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInst",
      "target": "oaModDesignInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInst",
      "target": "oaModInst",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInst",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModVectorInst",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccRect",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccRect",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccRect",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstDef",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccVectorInstDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCluster",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaCluster",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDonut",
      "target": "oaShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDonut",
      "target": "oaPinFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDonut",
      "target": "oaConnFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDonut",
      "target": "oaFig",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDonut",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaDonut",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaGuideQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInstHeader",
      "target": "oaOccObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccModuleInstHeader",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTermDef",
      "target": "oaModObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaModBusTermDef",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstPropDisplay",
      "target": "oaOccTextDisplay",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstPropDisplay",
      "target": "oaOccShape",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstPropDisplay",
      "target": "oaBlockObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaOccInstPropDisplay",
      "target": "oaDesignObject",
      "type": "SPECIALIZES",
      "weight": 2
    },
    {
      "source": "oaBoundaryQuery",
      "target": "oaRegionQuery",
      "type": "SPECIALIZES",
      "weight": 2
    }
  ]
}