// OpenAccess Design Ontology Import Script
// This script will create a graph database of the OpenAccess class hierarchy
// Run this script in Neo4j Browser or through cypher-shell

// Clear existing database if needed
MATCH (n) DETACH DELETE n;

// Create constraints for faster lookups
CREATE CONSTRAINT class_name IF NOT EXISTS ON (c:Class) ASSERT c.name IS UNIQUE;

// Create Class nodes
CREATE (:Class {name: "oaModule", type: "Class", description: "OpenAccess will maintain the correspondence between the module hierarchy and the block hierarchy for all module objects that are underneath a design's top module. There are zero or one top modules in a design.A module may be created directly through the oaModule API, by embedding the top module f...", methods_count: 29, enums_count: 0, filename: "classoaModule.yaml"});
CREATE (:Class {name: "oaModObject", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaModObject.yaml"});
CREATE (:Class {name: "oaDesignObject", type: "Class", description: "There is a substantial tree of classes derived from oaDesignObject. For most of these classes, an oaDesignObject can be classified using itsoaTypevalue. SeeoaObject::getTypefor more information. For the classes derived from oaDesignObject that are base classes, oaDesignObject has functions to tes...", methods_count: 8, enums_count: 0, filename: "classoaDesignObject.yaml"});
CREATE (:Class {name: "oaObject", });
CREATE (:Class {name: "oaDesign", type: "Class", description: "Each oaDesign lives in a cellView in an OpenAccess library and is identified by the lib, cell, and view names for thatoaCellView. It will be persistently represented as one or more files in that cellView. The information that the application needs is read from the database file when it is accesse...", methods_count: 108, enums_count: 0, filename: "classoaDesign.yaml"});
CREATE (:Class {name: "oaBlock", type: "Class", description: "The oaBlock class is a container for the physical implementation of a design. There is at most one oaBlock object per design which contains all the figures for its design. An oaBlock also contains the physical netlist in the form of oaInst and oaNet objects. The oaBlock class can be observed by d...", methods_count: 52, enums_count: 0, filename: "classoaBlock.yaml"});
CREATE (:Class {name: "oaOccurrence", type: "Class", description: "The oaOccurrence class represents an occurrence of anoaBlockand/or anoaModulein the occurrence hierarchy. AnoaDesignmay have zero or one top oaOccurrence. Except for a top occurrence, each oaOccurrence has a singleoaOccInstthat is its parent. An oaOccurrence also has zero or more occInsts that ar...", methods_count: 17, enums_count: 0, filename: "classoaOccurrence.yaml"});
CREATE (:Class {name: "oaRoute", type: "Class", description: "Routes are used to represent the symbolic routing used by high capacity routers. They specify end-point connected routes that also indicate the objects they connect. Other routing may be geometric, which often is used for power and ground nets and other hand crafted nets. Geometric routing is def...", methods_count: 20, enums_count: 0, filename: "classoaRoute.yaml"});
CREATE (:Class {name: "oaConnFig", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaConnFig.yaml"});
CREATE (:Class {name: "oaFig", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaFig.yaml"});
CREATE (:Class {name: "oaBlockObject", type: "Class", description: "", methods_count: 22, enums_count: 0, filename: "classoaBlockObject.yaml"});
CREATE (:Class {name: "oaRouteObjectArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaRouteObjectArray.yaml"});
CREATE (:Class {name: "oaRouteStatus", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaRouteStatus.yaml"});
CREATE (:Class {name: "oaModBusNet", type: "Class", description: "oaModBusNet,oaOccBusNet, andoaBusNeteach represent bus nets on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModBusNet, the master is anoaModule, and each module in a design will have a set of zero or more modBusNets. ForoaOccBusNet,...", methods_count: 14, enums_count: 0, filename: "classoaModBusNet.yaml"});
CREATE (:Class {name: "oaModNet", type: "Class", description: "oaModNet,oaOccNet, andoaNeteach represent nets in a different kind of master, where in each case, the master represents a level of hierarchy in the design.Note thatoaModNet::getOccNetswill return oaOccNets only if the occurrence hierarchy has been expanded to include those objects. SeeWorking in ...", methods_count: 20, enums_count: 0, filename: "classoaModNet.yaml"});
CREATE (:Class {name: "oaModBusNetDef", type: "Class", description: "A busNetDef can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.An busNetDef is automatically created if necessary whenever applications create busNets. Implicitly created busNet definitions hav...", methods_count: 13, enums_count: 0, filename: "classoaModBusNetDef.yaml"});
CREATE (:Class {name: "oaRecursionObserver", type: "Class", description: "See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.", methods_count: 2, enums_count: 0, filename: "classoaRecursionObserver.yaml"});
CREATE (:Class {name: "oaBaseObserver", });
CREATE (:Class {name: "oaRefHeader", type: "Class", description: "", methods_count: 7, enums_count: 0, filename: "classoaRefHeader.yaml"});
CREATE (:Class {name: "oaDesignArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaDesignArray.yaml"});
CREATE (:Class {name: "oaOccBusTermBit", type: "Class", description: "The oaOccBusTermBits are always implicit terminals. They cannot have their connected net changed with moveToNet(), nor can they have pins created on them.oaOccBusTermBit,oaModBusTermBit, andoaBusTermBiteach represent a bit of a busTerminal on a different kind of master, where in each case the mas...", methods_count: 8, enums_count: 0, filename: "classoaOccBusTermBit.yaml"});
CREATE (:Class {name: "oaOccBitTerm", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaOccBitTerm.yaml"});
CREATE (:Class {name: "oaOccTerm", type: "Class", description: "oaModTerm, oaOccTerm, andoaTermeach represent bus terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaOccTerm, the master is anoaOccurrence, which corresponds to a unique usage of a module or a block in a design. EachoaOccurre...", methods_count: 19, enums_count: 0, filename: "classoaOccTerm.yaml"});
CREATE (:Class {name: "oaOccObject", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaOccObject.yaml"});
CREATE (:Class {name: "oaOccBusTermDef", type: "Class", description: "A bus definition can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.The bit order of an explicit oaOccBusTermDef is independent of the order within individual oaOccBusTerms with the same base n...", methods_count: 12, enums_count: 0, filename: "classoaOccBusTermDef.yaml"});
CREATE (:Class {name: "oaModBusTermBit", type: "Class", description: "An oaModBusTermBit can be explicitly created. An explicitly created busTermBit must be explicitly destroyed.oaModBusTermBit,oaOccBusTermBit, andoaBusTermBiteach represent a bit of a busTerminal on a different kind of master, where in each case the master represents a level of hierarchy in the des...", methods_count: 10, enums_count: 0, filename: "classoaModBusTermBit.yaml"});
CREATE (:Class {name: "oaBusTermBit", type: "Class", description: "An oaBusTermBit can be explicitly created and used in other operations like creating pins. An explicitly created busTermBit must be explicitly destroyed.", methods_count: 10, enums_count: 0, filename: "classoaBusTermBit.yaml"});
CREATE (:Class {name: "", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaTraits_3_01oaViaTopology2DTblValue_01_4.yaml"});
CREATE (:Class {name: "oaOccMemNetIter", type: "Class", description: "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in thegetNext()function. This index indicates the member position of the specified net in the collection. For the example above, the iterator would return the followi...", methods_count: 1, enums_count: 0, filename: "classoaOccMemNetIter.yaml"});
CREATE (:Class {name: "oaBaseMemNetIter", type: "Class", description: "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in the getNext() function. This index indicates the member position of the specified net in the collection. For the example above, the iterator would return the follo...", methods_count: 1, enums_count: 0, filename: "classoaBaseMemNetIter.yaml"});
CREATE (:Class {name: "oaOccNet", type: "Class", description: "oaOccNet objects are always in the occurrence domain. Nets span the domains in a design. An oaOccNet may be an occurrence of anoaNetin the block hierarchy and may be an occurrence of anoaModNetin the module hierarchy.Multi-bit nets represent a collection of logical connections. Nets can include b...", methods_count: 21, enums_count: 0, filename: "classoaOccNet.yaml"});
CREATE (:Class {name: "oaTextDisplay", type: "Class", description: "", methods_count: 20, enums_count: 0, filename: "classoaTextDisplay.yaml"});
CREATE (:Class {name: "oaShape", type: "Class", description: "All shapes are placed on anoaLayerand anoaPurpose. The design API identifies these by the layer and purpose numbers. The corresponding names are found in the technology database.Optionally, shapes can also belong to either anoaNetor anoaPinto provide part of the physical implementation of that ob...", methods_count: 16, enums_count: 0, filename: "classoaShape.yaml"});
CREATE (:Class {name: "oaPinFig", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaPinFig.yaml"});
CREATE (:Class {name: "oaAttrDisplay", type: "Class", description: "The oaAttrDisplay is contained in the design that contains the attached design object.Note:The attribute is specified using one of many defined values. Each object type has its own set of values. Note:The attribute is specified using one of many defined values. Each object type has its own set of...", methods_count: 5, enums_count: 0, filename: "classoaAttrDisplay.yaml"});
CREATE (:Class {name: "oaInstAttrDisplay", type: "Class", description: "TheoaAttrDisplayis contained in the design that contains the attachedoaInstobject.", methods_count: 5, enums_count: 0, filename: "classoaInstAttrDisplay.yaml"});
CREATE (:Class {name: "oaInstPropDisplay", type: "Class", description: "The oaInstPropDisplay is contained in the design that contains the attachedoaInstobject.", methods_count: 4, enums_count: 0, filename: "classoaInstPropDisplay.yaml"});
CREATE (:Class {name: "oaPropDisplay", type: "Class", description: "The oaPropDisplay object is contained in the design database that contains theoaPropobject.", methods_count: 2, enums_count: 0, filename: "classoaPropDisplay.yaml"});
CREATE (:Class {name: "oaTextOverride", type: "Class", description: "The oaTextOverride display object resides in the same design as theoaInstobject it is associated with.", methods_count: 5, enums_count: 0, filename: "classoaTextOverride.yaml"});
CREATE (:Class {name: "oaElmore", type: "Class", description: "Undo is not supported for the oaElmore class.The oaElmore class can be observed by deriving fromoaObserver<oaElmore>. The oaElmore class can be observed by deriving fromoaObserver<oaElmore>.", methods_count: 9, enums_count: 0, filename: "classoaElmore.yaml"});
CREATE (:Class {name: "oaPiElmore", type: "Class", description: "Undo is not supported for oaPiElmore objects.", methods_count: 11, enums_count: 0, filename: "classoaPiElmore.yaml"});
CREATE (:Class {name: "oaLumpedElmore", type: "Class", description: "Undo is not supported for oaLumpedElmore objects.", methods_count: 5, enums_count: 0, filename: "classoaLumpedElmore.yaml"});
CREATE (:Class {name: "oaReducedModel", type: "Class", description: "ReducedModels are used as simplified representations of the electrical behavior of a net in order to be smaller and faster for delay calculation than a full detailed parasitic model. Reduced models are associated with a Terminal or InstTerm on a net to represent the behavior of the Net when that ...", methods_count: 6, enums_count: 0, filename: "classoaReducedModel.yaml"});
CREATE (:Class {name: "oaRect", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaRect.yaml"});
CREATE (:Class {name: "oaInstAttrType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaInstAttrType.yaml"});
CREATE (:Class {name: "oaAttrType", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaAttrType.yaml"});
CREATE (:Class {name: "oaNetTermArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaNetTermArray.yaml"});
CREATE (:Class {name: "oaNetTermArrayBase<oaNet *, oaTerm *>", });
CREATE (:Class {name: "oaOccBusTerm", type: "Class", description: "oaModBusTerm, oaOccBusTerm, andoaBusTermeach represent bus terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaOccBusTerm, the master is anoaOccurrence, which corresponds to a unique usage of a module or a block in a design. E...", methods_count: 10, enums_count: 0, filename: "classoaOccBusTerm.yaml"});
CREATE (:Class {name: "oaModBusTerm", type: "Class", description: "oaModBusTerm,oaOccBusTerm, andoaBusTermeach represent bus terminals in a different hierarchy domain, where in each case the terminal's master represents a level of hierarchy in the design.For oaModBusTerm, the master is anoaModule, and each module in a design will have a set of zero or more modBu...", methods_count: 14, enums_count: 0, filename: "classoaModBusTerm.yaml"});
CREATE (:Class {name: "oaBusTerm", type: "Class", description: "", methods_count: 14, enums_count: 0, filename: "classoaBusTerm.yaml"});
CREATE (:Class {name: "oaOccPathSeg", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaOccPathSeg.yaml"});
CREATE (:Class {name: "oaOccShape", type: "Class", description: "oaOccArcoaOccDonutoaOccDotoaOccEllipseoaOccLineoaOccPathoaOccPathSegoaOccPolygonoaOccRectoaOccTextoaOccEvalTextoaOccTextDisplayoaOccPropDisplayoaOccAttrDisplayoaOccTextOverrideoaOccInstPropDisplayoaOccInstAttrDisplayThe oaOccShape class has a read-only interface, which means that oaOccShape objec...", methods_count: 15, enums_count: 0, filename: "classoaOccShape.yaml"});
CREATE (:Class {name: "oaOccArrayInst", type: "Class", description: "", methods_count: 8, enums_count: 0, filename: "classoaOccArrayInst.yaml"});
CREATE (:Class {name: "oaOccBitInst", type: "Class", description: "oaOccBitInst objects are always in the occurrence domain.", methods_count: 0, enums_count: 0, filename: "classoaOccBitInst.yaml"});
CREATE (:Class {name: "oaOccDesignInst", type: "Class", description: "oaOccDesignInst objects are always in the occurrence domain.", methods_count: 10, enums_count: 0, filename: "classoaOccDesignInst.yaml"});
CREATE (:Class {name: "oaOccInst", type: "Class", description: "An oaOccInst may correspond to anoaModInst, anoaInst, or both:If the occInst is an occurrence of anoaModModuleInst(it will be anoaOccModuleScalarInst, or anoaOccModuleVectorInst) then it will only have a correspondingoaModInst.If the occInst is an occurrence of anoaModInstthat is not visible in t...", methods_count: 16, enums_count: 0, filename: "classoaOccInst.yaml"});
CREATE (:Class {name: "oaArrayInst", type: "Class", description: "Note that oaArrayInsts do not provide any mechanism for specifying the connectivity between elements of the array. They act just like oaScalarInsts in that there is a single copy of their terminals, and the width of the nets connecting to them is unaffected by the array dimensions.", methods_count: 22, enums_count: 0, filename: "classoaArrayInst.yaml"});
CREATE (:Class {name: "oaPin", type: "Class", description: "All pins are associated with a physical figure and are named. These names can be assigned by the creator. For pins associated with scalar terminals, pin names can be automatically assigned by the database.The oaPin class can be observed by deriving fromoaObserver<oaPin>. The oaPin class can be ob...", methods_count: 16, enums_count: 0, filename: "classoaPin.yaml"});
CREATE (:Class {name: "oaTerm", type: "Class", description: "All terminals are required to have a net even if there is nothing else attached to that net.Multi-bit terminals represent a group of logical connections to import or export from the block. The terminals can consist of busTerms having a single root name with an index range, or they can include bun...", methods_count: 25, enums_count: 0, filename: "classoaTerm.yaml"});
CREATE (:Class {name: "oaModNetConnectDef", type: "Class", description: "Applications that analyze design connectivity must resolve the net name of the net associated with an oaModNetConnectDef. The application searches up the design hierarchy for anoaModAssignmentthat matches the assignment name specified in the oaModNetConnectDef. If the assignment is found, the app...", methods_count: 2, enums_count: 0, filename: "classoaModNetConnectDef.yaml"});
CREATE (:Class {name: "oaModConnectDef", type: "Class", description: "The oaModConnectDef classes are used to allow the actual connection of a ModNet or a ModTerm to be specified by a parent instance in the design hierarchy. That specification is done by creating anoaModAssignmentobject. This is primarily used to handle multiple power supplies and substrate connect...", methods_count: 2, enums_count: 0, filename: "classoaModConnectDef.yaml"});
CREATE (:Class {name: "oaModBitNet", type: "Class", description: "You can have two or more bitNets that are equivalent. Equivalent bitNets are traversed separately or logically as the same net.You can create associate a connection definition,oaModNetConnectDef, with a bitNet. You can create associate a connection definition,oaModNetConnectDef, with a bitNet.", methods_count: 9, enums_count: 0, filename: "classoaModBitNet.yaml"});
CREATE (:Class {name: "oaAssignmentDef", type: "Class", description: "When an oaAssignmentDef is used with anoaNetConnectDef, the default net name specifies the name to default to for the net if a corresponding assignment is not found.When an oaAssignmentDef is used with anoaTermConnectDef, the default net name specifies the name to default to for the net to extern...", methods_count: 5, enums_count: 0, filename: "classoaAssignmentDef.yaml"});
CREATE (:Class {name: "oaAssignment", type: "Class", description: "The oaAssignment class can be observed by deriving fromoaObserver<oaAssignment>.SeeoaNetConnectDefandoaTermConnectDeffor information on the specific type of connection definition. SeeoaAssignValueandoaAssignAssignmentfor information on the specific type of connection assignment. SeeoaNetConnectDe...", methods_count: 6, enums_count: 0, filename: "classoaAssignment.yaml"});
CREATE (:Class {name: "oaBusNetDef", type: "Class", description: "A busNetDef can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a[22:25]is a legal bus name. Bus indexes must be non-negative.An oaBusNetDef is automatically created if necessary whenever applications create busNets. Implicitly created busNet definitions h...", methods_count: 15, enums_count: 0, filename: "classoaBusNetDef.yaml"});
CREATE (:Class {name: "oaBusTermDef", type: "Class", description: "A bus definition can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.An oaBusTermDef is automatically created if necessary whenever applications create oaBusTerms. Implicitly created oaBusTermDe...", methods_count: 13, enums_count: 0, filename: "classoaBusTermDef.yaml"});
CREATE (:Class {name: "oaCluster", type: "Class", description: "The oaCluster class can be observed by deriving fromoaObserver<oaCluster>.", methods_count: 15, enums_count: 0, filename: "classoaCluster.yaml"});
CREATE (:Class {name: "oaCMap", type: "Class", description: "Each GCell can hold supply and demand counts for routes that traverse the GCell horizontally, vertically, and up/down through vias. All of these GCell statistics are set and managed by applications. The database does not calculate them automatically.For all of the functions below that get statist...", methods_count: 21, enums_count: 0, filename: "classoaCMap.yaml"});
CREATE (:Class {name: "oaConnectDef", type: "Class", description: "The oaConnectDef classes allow you to specify that the net name of a connection may be assigned a different name. The new name is specified by a correspondingoaAssignment. If there is no correspondingoaAssignment, the default name specified in the oaConnectDef is used.An oaConnectDef is usually a...", methods_count: 2, enums_count: 0, filename: "classoaConnectDef.yaml"});
CREATE (:Class {name: "oaFigGroupMem", type: "Class", description: "", methods_count: 6, enums_count: 0, filename: "classoaFigGroupMem.yaml"});
CREATE (:Class {name: "oaGCellPattern", type: "Class", description: "GCellPatterns can be horizontal or vertical and at least one of each must exist in a design for it to have a valid congestion map. Each GCellPattern declares a set of uniformly spaced edges that will divide the design area into columns or rows. GCellPatterns withisHorizontalset will define column...", methods_count: 6, enums_count: 0, filename: "classoaGCellPattern.yaml"});
CREATE (:Class {name: "oaInstTerm", type: "Class", description: "InstTerms can exist that do not have a proper corresponding terminal in the master of the instance. This allows instTerms to be created when the instance master is not read in, and it allows changes to instTerms that happen before the master is updated. The traversal from an instTerm to its corre...", methods_count: 30, enums_count: 0, filename: "classoaInstTerm.yaml"});
CREATE (:Class {name: "oaLayerHeader", type: "Class", description: "The oaLayerHeader class can be observed by deriving fromoaObserver<oaLayerHeader>.", methods_count: 11, enums_count: 0, filename: "classoaLayerHeader.yaml"});
CREATE (:Class {name: "oaLPPHeader", type: "Class", description: "During binding, LPPHeaders at lower levels of the design hierarchy are promoted up the design hierarchy. As a result, the top block of a given design will have an LPPHeader for every LPPHeader that exists in the top block of every bound, instantiated design. Designs that do not have top blocks al...", methods_count: 9, enums_count: 0, filename: "classoaLPPHeader.yaml"});
CREATE (:Class {name: "oaNet", type: "Class", description: "oaNet objects are always in the block domain. Nets span the domains in a design. An oaNet may have one or more equivalent oaModNet's in the module hierarchy and will have an equivalentoaOccNetin the occurrence hierarchy.All nets have names. These names can be assigned by the creator. For scalar n...", methods_count: 35, enums_count: 0, filename: "classoaNet.yaml"});
CREATE (:Class {name: "oaRowHeader", type: "Class", description: "The oaRowHeader class can be observed by deriving fromoaObserver<oaRowHeader>.", methods_count: 9, enums_count: 0, filename: "classoaRowHeader.yaml"});
CREATE (:Class {name: "oaScanChain", type: "Class", description: "Scan chains often get special treatment by place and route tools which can take advantage of the fact that their detailed order and partitioning into individual scan chains can be done late in the design flow.OpenAccess will model scan chains at several stages of their specification. It can indic...", methods_count: 14, enums_count: 0, filename: "classoaScanChain.yaml"});
CREATE (:Class {name: "oaScanChainInst", type: "Class", description: "The oaScanChainInst class can be observed by deriving fromoaObserver<oaScanChainInst>.", methods_count: 10, enums_count: 0, filename: "classoaScanChainInst.yaml"});
CREATE (:Class {name: "oaScanChainSet", type: "Class", description: "The oaScanChainSet class can be observed by deriving fromoaObserver<oaScanChainSet>.", methods_count: 3, enums_count: 0, filename: "classoaScanChainSet.yaml"});
CREATE (:Class {name: "oaTrackPattern", type: "Class", description: "Track patterns are similar to RouteGridPitch and RouteGridOffset constraints (see the built-in Routing constraint section inCreating and Modeling Process Rules and Constraintsin the Programmers Guide). The routing constraints are the overall technology plan. Track patterns are generally initializ...", methods_count: 15, enums_count: 0, filename: "classoaTrackPattern.yaml"});
CREATE (:Class {name: "oaVectorInstDef", type: "Class", description: "A vectorInstDef is automatically created if necessary whenever applications create vectorInsts. Implicitly created vectorInst definitions have no bitOrder. Applications may explicitly create a vectorInst definition in order to specify that it has a specific bitOrder.The bit order of an explicit o...", methods_count: 13, enums_count: 0, filename: "classoaVectorInstDef.yaml"});
CREATE (:Class {name: "oaModBusNetBit", type: "Class", description: "An oaModBusNetBit can be explicitly created and used in other operations like creating terminals or instTerms. An explicitly created busNetBit must be explicitly destroyed.oaModBusNetBit, oaOccBusNetmBit, andoaBusNetBiteach represent a bit of a busNet on a different kind of master, where in each ...", methods_count: 10, enums_count: 0, filename: "classoaModBusNetBit.yaml"});
CREATE (:Class {name: "oaModScalarNet", type: "Class", description: "", methods_count: 8, enums_count: 0, filename: "classoaModScalarNet.yaml"});
CREATE (:Class {name: "oaBitOrder", type: "Class", description: "oaBusNetdefinitions (oaBusNetDef,oaModBusNetDef,oaOccBusNetDef)oaBusTermdefinitions (oaBusTermDef,oaModBusTermDef,oaOccBusTermDef)oaVectorInstdefinitions (oaVectorInstDef,oaModVectorInstDef,oaOccVectorInstDef)For example, A[9:1] and A[0:7] are both legal bus names. oaBitOrder provides information...", methods_count: 2, enums_count: 0, filename: "classoaBitOrder.yaml"});
CREATE (:Class {name: "oaModBundleTerm", type: "Class", description: "oaModBundleTerm,oaOccBundleTerm, andoaBundleTermeach represent bundle terminals in a different hierarchy domain, where in each case the master represents a level of hierarchy in the design.For oaModBundleTerm, the master is anoaModule, and each module in a cellview will have a set of zero or more...", methods_count: 9, enums_count: 0, filename: "classoaModBundleTerm.yaml"});
CREATE (:Class {name: "oaModTerm", type: "Class", description: "oaModTerm,oaOccTerm, andoaTermeach represent terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModTerm, the master is anoaModule, and each module in a design will have a set of zero or more modTerms.ForoaTerm, the master is ...", methods_count: 22, enums_count: 0, filename: "classoaModTerm.yaml"});
CREATE (:Class {name: "oaDesignUndoObserverBase", type: "Class", description: "See oaObserver for a general description of how callbacks are used.", methods_count: 8, enums_count: 0, filename: "classoaDesignUndoObserverBase.yaml"});
CREATE (:Class {name: "oaDesignUndoObserver", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaDesignUndoObserver.yaml"});
CREATE (:Class {name: "oaBaseMemNetCollection", type: "Class", description: "The member net collection classes represent collections of nets that the starting net is a member of.See the derived classes for more details. See the derived classes for more details.", methods_count: 2, enums_count: 0, filename: "classoaBaseMemNetCollection.yaml"});
CREATE (:Class {name: "oaMemNetCollection", type: "Class", description: "The oaMemNetCollection class is a specialized collection class because theoaMemNetIterused to iterate over it does not have the standard getNext signature use by the template collection classes.The most common way to use an oaMemNetCollection is to use it inline in the construction of anoaMemNetI...", methods_count: 1, enums_count: 0, filename: "classoaMemNetCollection.yaml"});
CREATE (:Class {name: "oaModMemNetCollection", type: "Class", description: "The oaModMemNetCollection class is a specialized collection class because theoaModMemNetIterused to iterate over it does not have the standard getNext signature use by the template collection classes.The most common way to use an oaModMemNetCollection is to use it inline in the construction of an...", methods_count: 1, enums_count: 0, filename: "classoaModMemNetCollection.yaml"});
CREATE (:Class {name: "oaOccMemNetCollection", type: "Class", description: "The oaOccMemNetCollection class is a specialized collection class because theoaOccMemNetIterused to iterate over it does not have the standard getNext signature use by the template collection classes.The most common way to use an oaOccMemNetCollection is to use it inline in the construction of an...", methods_count: 1, enums_count: 0, filename: "classoaOccMemNetCollection.yaml"});
CREATE (:Class {name: "oaModBitInst", type: "Class", description: "oaModDesignBitInst objects are always in the module domain.", methods_count: 0, enums_count: 0, filename: "classoaModBitInst.yaml"});
CREATE (:Class {name: "oaModDesignInst", type: "Class", description: "oaModDesignInst objects are always in the module domain.", methods_count: 13, enums_count: 0, filename: "classoaModDesignInst.yaml"});
CREATE (:Class {name: "oaModInst", type: "Class", description: "oaModInst objects are always in the module domain. An oaModInst can have an equivalentoaInstin the block domain and will always have an equivalentoaOccInstin the occurrence hierarchy.Note thatoaModInst::getOccInstswill return oaOccInsts only if the occurrence hierarchy has been expanded to includ...", methods_count: 15, enums_count: 0, filename: "classoaModInst.yaml"});
CREATE (:Class {name: "oaModScalarInst", type: "Class", description: "oaModScalarInst objects are always in the module domain.", methods_count: 10, enums_count: 0, filename: "classoaModScalarInst.yaml"});
CREATE (:Class {name: "oaModVectorInstBit", type: "Class", description: "oaVectorInstBitobjects are always in the block domain. They may be physical-only instances that are only in the block hierarchy, or they can be cross-domain instances that directly correspond to an oaModVectorInstBit in the module domain and anoaOccVectorInstBitin the occurrence domain.", methods_count: 10, enums_count: 0, filename: "classoaModVectorInstBit.yaml"});
CREATE (:Class {name: "oaAssignAssignment", type: "Class", description: "This type of connection assignment is useful for integrating a block of intellectual property that contain connection definition. An oaAssignAssignment can be used to insure that connectivity traversal applications search for connection assignments consistently in the entire design hierarchy.", methods_count: 3, enums_count: 0, filename: "classoaAssignAssignment.yaml"});
CREATE (:Class {name: "oaAssignValue", type: "Class", description: "the name of the net to use in place of the name of the net associated with the correspondingoaNetConnectDefobjectthe name of the net to use to externally connect to the terminal associated with the correspondingoaTermConnectDefobject", methods_count: 5, enums_count: 0, filename: "classoaAssignValue.yaml"});
CREATE (:Class {name: "oaInst", type: "Class", description: "oaInst objects are always in the block domain. Thus they are contained in anoaBlockobject. An oaInst may have one or more equivalent module instances in the module hierarchy and will have an equivalentoaOccInstin the occurrence hierarchy.You can use instances to create hierarchical designs. The m...", methods_count: 35, enums_count: 0, filename: "classoaInst.yaml"});
CREATE (:Class {name: "oaBitInst", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaBitInst.yaml"});
CREATE (:Class {name: "oaRef", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaRef.yaml"});
CREATE (:Class {name: "oaModVectorInst", type: "Class", description: "An oaModVectorInst object is always in the module domain. It is an instance of a design as opposed to anoaModModuleVectorInst, which is a vector instance of a local module.", methods_count: 13, enums_count: 0, filename: "classoaModVectorInst.yaml"});
CREATE (:Class {name: "oaModInstHeader", type: "Class", description: "SuperHeadersrepresent all of the instances of a Pcell master, regardless of parameter settingsSubHeadersrepresent all of the instances that have one specific set of parameter valuesEvery instance of a Pcell has exactly one subHeader, which, in turn, has exactly one superHeader. InstHeaders for in...", methods_count: 18, enums_count: 0, filename: "classoaModInstHeader.yaml"});
CREATE (:Class {name: "oaRow", type: "Class", description: "The oaRow class can be observed by deriving fromoaObserver<oaRow>.", methods_count: 20, enums_count: 0, filename: "classoaRow.yaml"});
CREATE (:Class {name: "oaDesignDataType", type: "Class", description: "The oaDesignDataType class has values for each of the different classes of managed data contained within anoaDesign. These values are used for several calls that refer to whole classes of objects in anoaDesign. SeeoaDesign:: getTimeStamp andoaDesign::preAllocate.oaAppDefTip: The oaDesignDataTypeE...", methods_count: 2, enums_count: 0, filename: "classoaDesignDataType.yaml"});
CREATE (:Class {name: "oaOccBundleTerm", type: "Class", description: "oaModBundleTerm, oaOccBundleTerm, andoaBundleTermeach represent bundle terminals in a different kind of hierarchy. In each case the master represents a level of hierarchy in the design. For oaOccBundleTerm, the master is anoaOccurrence, which corresponds to a unique usage of a module or a block i...", methods_count: 9, enums_count: 0, filename: "classoaOccBundleTerm.yaml"});
CREATE (:Class {name: "oaBundleTerm", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaBundleTerm.yaml"});
CREATE (:Class {name: "oaMutualInductor", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaMutualInductor.yaml"});
CREATE (:Class {name: "oaDevice", type: "Class", description: "Devices are managed objects, but they can be loaded from disk into memory (and unloaded from memory back to disk) on request as part of the parasitic network to which they belong. Therefore, database clients must be careful not to dereference a pointer to a device after the parasitic network to w...", methods_count: 14, enums_count: 0, filename: "classoaDevice.yaml"});
CREATE (:Class {name: "oaInductor", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaInductor.yaml"});
CREATE (:Class {name: "oaAnalysisPoint", type: "Class", description: "The oaAnalysisPoint class can be observed by deriving fromoaObserver<oaAnalysisPoint>.", methods_count: 6, enums_count: 0, filename: "classoaAnalysisPoint.yaml"});
CREATE (:Class {name: "oaModTermArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaModTermArray.yaml"});
CREATE (:Class {name: "oaArray<oaModTerm *>", });
CREATE (:Class {name: "oaArrayBase<oaModTerm *>", });
CREATE (:Class {name: "oaBlockageQuery", type: "Class", description: "", methods_count: 7, enums_count: 0, filename: "classoaBlockageQuery.yaml"});
CREATE (:Class {name: "oaRegionQuery", type: "Class", description: "A Region Query descends through a design hierarchy from the top design with which it is constructed, producing all objects of a specified type in the specified query region. It should be noted that Region Query never opens instance masters that are not already open. In other words, it will not pr...", methods_count: 13, enums_count: 0, filename: "classoaRegionQuery.yaml"});
CREATE (:Class {name: "oaAnalysisOpPoint", type: "Class", description: "The oaAnalysisOpPoint class can be observed by deriving fromoaObserver<oaAnalysisOpPoint>.", methods_count: 7, enums_count: 0, filename: "classoaAnalysisOpPoint.yaml"});
CREATE (:Class {name: "oaOpPointHeader", type: "Class", description: "The oaOpPointHeader class can be observed by deriving fromoaObserver<oaOpPointHeader>.", methods_count: 6, enums_count: 0, filename: "classoaOpPointHeader.yaml"});
CREATE (:Class {name: "oaOpPoint", });
CREATE (:Class {name: "oaSnapBoundary", type: "Class", description: "oaSnapBoundaries are optional adjuncts to oaPRBoundaries. If theoaPRBoundaryis rectangular then it will suffice for these purposes and no oaSnapBoundary need be created. oaSnapBoundaries are needed for cells with rectilinear (but non-rectangular) oaPRBoundaries.", methods_count: 3, enums_count: 0, filename: "classoaSnapBoundary.yaml"});
CREATE (:Class {name: "oaBoundary", type: "Class", description: "Two coincident and three collinear points are illegal, and if detected, cause an exception to be thrown. You can useoaPointArray::compress()to remove these combinations.The oaBoundary class can be observed by deriving fromoaObserver<oaBoundary>. The oaBoundary class can be observed by deriving fr...", methods_count: 9, enums_count: 0, filename: "classoaBoundary.yaml"});
CREATE (:Class {name: "oaOccVectorInst", type: "Class", description: "oaOccVectorInst objects are always in the occurrence domain.", methods_count: 13, enums_count: 0, filename: "classoaOccVectorInst.yaml"});
CREATE (:Class {name: "oaOccScalarInst", type: "Class", description: "oaOccScalarInst objects are always in the occurrence domain.", methods_count: 9, enums_count: 0, filename: "classoaOccScalarInst.yaml"});
CREATE (:Class {name: "oaOccVectorInstBit", type: "Class", description: "oaOccVectorInstBit objects are always in the occurrence domain.", methods_count: 11, enums_count: 0, filename: "classoaOccVectorInstBit.yaml"});
CREATE (:Class {name: "oaOccInstHeader", type: "Class", description: "SuperHeadersrepresent all of the instances of a Pcell master, regardless of parameter settingsSubHeadersrepresent all of the instances that have one specific set of parameter valuesEvery instance of a Pcell has exactly one subHeader, which, in turn, has exactly one superHeader. InstHeaders for in...", methods_count: 17, enums_count: 0, filename: "classoaOccInstHeader.yaml"});
CREATE (:Class {name: "oaTextDisplayCollection", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaTextDisplayCollection.yaml"});
CREATE (:Class {name: "oaInstHeader", type: "Class", description: "An oaInstHeader is an automatic object that is created and destroyed by the database. An oaInstHeader is automatically created whenever the first inst is created. An oaInstHeader is destroyed when the last inst of it is destroyed.oaInstHeaders are always in the block domain. An oaInstHeader may h...", methods_count: 15, enums_count: 0, filename: "classoaInstHeader.yaml"});
CREATE (:Class {name: "oaViaHeader", type: "Class", description: "A viaHeader is automatically created whenever the first via of a particular viaDef is created. A viaHeader is destroyed when the last via using the viaDef is destroyed.The oaViaHeader class can be observed by deriving fromoaObserver<oaViaHeader>.A discussion of the role oaViaHeader objects in the...", methods_count: 6, enums_count: 0, filename: "classoaViaHeader.yaml"});
CREATE (:Class {name: "oaCustomViaHeader", type: "Class", description: "SuperHeadersrepresent all of the instances of a Pcell master, regardless of parameter settingsSubHeadersrepresent all of the instances that have one specific set of parameter valuesEvery custom via of a Pcell has exactly one subHeader, which, in turn, has exactly one superHeader. CustomViaHeaders...", methods_count: 8, enums_count: 0, filename: "classoaCustomViaHeader.yaml"});
CREATE (:Class {name: "oaStdViaHeader", type: "Class", description: "A discussion of the roleoaViaHeaderobjects in the context of theoaStdViaobjects they reference can be found in theRepresenting Vias in OpenAccesssection of the Programmers Guide.", methods_count: 1, enums_count: 0, filename: "classoaStdViaHeader.yaml"});
CREATE (:Class {name: "oaBoundaryQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaBoundaryQuery.yaml"});
CREATE (:Class {name: "oaFigGroupQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaFigGroupQuery.yaml"});
CREATE (:Class {name: "oaGuideQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaGuideQuery.yaml"});
CREATE (:Class {name: "oaInstQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaInstQuery.yaml"});
CREATE (:Class {name: "oaLayerRangeBlockageQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaLayerRangeBlockageQuery.yaml"});
CREATE (:Class {name: "oaMarkerQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaMarkerQuery.yaml"});
CREATE (:Class {name: "oaPlacementBlockageQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaPlacementBlockageQuery.yaml"});
CREATE (:Class {name: "oaRowQuery", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaRowQuery.yaml"});
CREATE (:Class {name: "oaShapeQuery", type: "Class", description: "The sequence of virtual functions that get called during the query is as follows.oaShapeQuery::queryShape(oaShape *shape)- For shapes in a designoaRegionQuery::startRef(oaRef *ref, oaUInt4 row, oaUInt4 col)oaShapeQuery::queryShape(oaShape *shape)- For shapes in theoaRefthat is being processed.oaR...", methods_count: 6, enums_count: 0, filename: "classoaShapeQuery.yaml"});
CREATE (:Class {name: "oaSteinerQuery", type: "Class", description: "", methods_count: 6, enums_count: 0, filename: "classoaSteinerQuery.yaml"});
CREATE (:Class {name: "oaViaQuery", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaViaQuery.yaml"});
CREATE (:Class {name: "oaEvalTextLink", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaEvalTextLink.yaml"});
CREATE (:Class {name: "oaFigGroupStatus", type: "Class", description: "OpenAccess does not enforce these settings. Tools that modify FigGroups, or figures that belong to FigGroups, must enforce them.SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers. SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaFigGroupStatus.yaml"});
CREATE (:Class {name: "oaOccBusNetDef", type: "Class", description: "The bit order of an explicit oaOccBusNetDef is independent of the order within individual oaOccBusNets with the same base name. Verilog requires a single wire declaration for a given base name, and the range of that declaration covers all of the bit indices used by the sub-ranges that correspond ...", methods_count: 12, enums_count: 0, filename: "classoaOccBusNetDef.yaml"});
CREATE (:Class {name: "oaBlockageType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 3, enums_count: 0, filename: "classoaBlockageType.yaml"});
CREATE (:Class {name: "oaModNetTermNameArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaModNetTermNameArray.yaml"});
CREATE (:Class {name: "oaNetTermArrayBase<oaModNet *, oaName>", });
CREATE (:Class {name: "oaNetTermArrayBase", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaNetTermArrayBase.yaml"});
CREATE (:Class {name: "oaModNetTermArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaModNetTermArray.yaml"});
CREATE (:Class {name: "oaModNetTermPosArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaModNetTermPosArray.yaml"});
CREATE (:Class {name: "oaNetTermNameArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaNetTermNameArray.yaml"});
CREATE (:Class {name: "oaNetTermPosArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaNetTermPosArray.yaml"});
CREATE (:Class {name: "oaOccVectorInstDef", type: "Class", description: "The bit order of an explicit oaOccVectorInstDef is independent of the order within individual oaOccVectorInsts with the same base name. Verilog requires a single wire declaration for a given base name, and the range of that declaration covers all of the bit indices used by the sub-ranges that cor...", methods_count: 12, enums_count: 0, filename: "classoaOccVectorInstDef.yaml"});
CREATE (:Class {name: "oaVectorInstBit", type: "Class", description: "oaVectorInstBit objects are always in the block domain. They can be physical-only instances that are only in the block hierarchy or they can be cross-domain instances that directly correspond to anoaModVectorInstBitin the module domain and anoaOccVectorInstBitin the occurrence domain.", methods_count: 12, enums_count: 0, filename: "classoaVectorInstBit.yaml"});
CREATE (:Class {name: "oaOccModuleInst", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaOccModuleInst.yaml"});
CREATE (:Class {name: "oaOccModuleBitInst", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaOccModuleBitInst.yaml"});
CREATE (:Class {name: "oaOccModuleVectorInst", type: "Class", description: "oaOccModuleVectorInst objects refer to master module and are always in the occurrence domain.", methods_count: 12, enums_count: 0, filename: "classoaOccModuleVectorInst.yaml"});
CREATE (:Class {name: "oaOccModuleScalarInst", type: "Class", description: "", methods_count: 8, enums_count: 0, filename: "classoaOccModuleScalarInst.yaml"});
CREATE (:Class {name: "oaOccModuleVectorInstBit", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaOccModuleVectorInstBit.yaml"});
CREATE (:Class {name: "oaScalarTerm", type: "Class", description: "oaScalarTerm objects are always in the block domain. oaScalarTerms may be physical-only terminals that are only in the block hierarchy, or they can be cross-domain terminals that directly correspond to anoaModScalarTermin the module domain and anoaOccScalarTermin the occurrence domain.", methods_count: 7, enums_count: 0, filename: "classoaScalarTerm.yaml"});
CREATE (:Class {name: "oaBitTerm", type: "Class", description: "You can create associate a connection definition,oaTermConnectDef, with a bitTerm.", methods_count: 17, enums_count: 0, filename: "classoaBitTerm.yaml"});
CREATE (:Class {name: "oaModAssignAssignment", type: "Class", description: "This type of connection assignment is useful for integrating a block of intellectual property that contain connection definition. An oaModAssignAssignment can be used to insure that connectivity traversal applications search for connection assignments consistently in the entire design hierarchy.", methods_count: 3, enums_count: 0, filename: "classoaModAssignAssignment.yaml"});
CREATE (:Class {name: "oaModAssignment", type: "Class", description: "SeeoaModNetConnectDefandoaModTermConnectDeffor information on the specific type of connection definition. SeeoaModAssignValueandoaModAssignAssignmentfor information on the specific type of connection assignment.The oaModAssignment class can be observed by deriving fromoaObserver<oaModAssignment>....", methods_count: 6, enums_count: 0, filename: "classoaModAssignment.yaml"});
CREATE (:Class {name: "oaNetConnectDef", type: "Class", description: "Applications that analyze design connectivity must resolve the net name of the net associated with an oaNetConnectDef. The application searches up the design hierarchy for anoaAssignmentthat matches the assignment name specified in theoaAssignmentDefof the oaNetConnectDef. If the assignment is fo...", methods_count: 2, enums_count: 0, filename: "classoaNetConnectDef.yaml"});
CREATE (:Class {name: "oaBitNet", type: "Class", description: "You can have two or more bitNets that are equivalent. Equivalent bitNets are traversed separately or logically as the same net.You can create associate a connection definition,oaNetConnectDef, with a bitNet. You can create associate a connection definition,oaNetConnectDef, with a bitNet.", methods_count: 25, enums_count: 0, filename: "classoaBitNet.yaml"});
CREATE (:Class {name: "oaRouteTopology", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaRouteTopology.yaml"});
CREATE (:Class {name: "oaOccPolygon", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaOccPolygon.yaml"});
CREATE (:Class {name: "oaLayerBlockage", type: "Class", description: "oaLayerBlockages may have an effective width. This is the value that is used by routing tools to determine the minimum spacing constraint for other geometry placed near the blockage. Typically, if a blockage has no effective width (hasEffectiveWidth()is false), the blockage should be treated as \"...", methods_count: 16, enums_count: 0, filename: "classoaLayerBlockage.yaml"});
CREATE (:Class {name: "oaBlockage", type: "Class", description: "Note: LayerBlockages (bothoaLayerBlockageandoaLayerHalo) will never have a blockageType of oacPlacementBlockageType. AreaBlockages (bothoaAreaBlockageandoaAreaHalo) always will be of type oacPlacementBlockageType, and this type is automatically set on oaAreaBlockages. For additional information o...", methods_count: 9, enums_count: 0, filename: "classoaBlockage.yaml"});
CREATE (:Class {name: "oaOccAssignment", type: "Class", description: "The oaOccAssignment class can be observed by deriving fromoaObserver<oaOccAssignment>.", methods_count: 3, enums_count: 0, filename: "classoaOccAssignment.yaml"});
CREATE (:Class {name: "oaOccConnectDef", type: "Class", description: "The oaOccConnectDef class can be observed by deriving fromoaObserver<oaOccConnectDef>.", methods_count: 1, enums_count: 0, filename: "classoaOccConnectDef.yaml"});
CREATE (:Class {name: "oaOccInstTerm", type: "Class", description: "WhenoaInstTermobjects are created in the block domain andoaModInstTermobjects are created in the module domain, corresponding oaOccInstTerm objects are automatically created in the occurrence domain. Each oaOccInstTerm can correspond to oneoaModInstTerm, or oneoaInstTerm, or one of each.oaOccInst...", methods_count: 26, enums_count: 0, filename: "classoaOccInstTerm.yaml"});
CREATE (:Class {name: "oaOccModuleInstHeader", type: "Class", description: "The oaOccModuleInstHeader class can be observed by deriving fromoaObserver<oaOccModuleInstHeader>.", methods_count: 7, enums_count: 0, filename: "classoaOccModuleInstHeader.yaml"});
CREATE (:Class {name: "oaModBitTerm", type: "Class", description: "You can create associate a connection definition,oaModTermConnectDef, with a bitTerm.", methods_count: 1, enums_count: 0, filename: "classoaModBitTerm.yaml"});
CREATE (:Class {name: "oaModBusTermDef", type: "Class", description: "A bus definition can be 'sparse' (have missing bits). Busses do not have to start or end at zero. For example,a<22:25>is a legal bus name. Bus indexes must be non-negative.An oaModBusTermDef is automatically created if necessary whenever applications create oaModBusTerms. Implicitly created oaMod...", methods_count: 13, enums_count: 0, filename: "classoaModBusTermDef.yaml"});
CREATE (:Class {name: "oaModMemNetIter", type: "Class", description: "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in thegetNext()function. This index indicates the member position of the specified net in the collection. For the example above, the iterator would return the followi...", methods_count: 1, enums_count: 0, filename: "classoaModMemNetIter.yaml"});
CREATE (:Class {name: "oaLayerRangeHalo", type: "Class", description: "The mask numbers of layers are ordered, but their corresponding layer numbers may not be ordered. A mask number can also map to one or more layers.A mask range can be specified by a pair of lower and upper bound mask numbers, or a mask range can be an unbounded range where only the lower bound ma...", methods_count: 6, enums_count: 0, filename: "classoaLayerRangeHalo.yaml"});
CREATE (:Class {name: "oaOccPropDisplay", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaOccPropDisplay.yaml"});
CREATE (:Class {name: "oaOccTextDisplay", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaOccTextDisplay.yaml"});
CREATE (:Class {name: "oaProp", });
CREATE (:Class {name: "oaSubNetwork", type: "Class", description: "The oaSubNetwork class can be used to represent the relationship between a set of nodes and devices and the corresponding route element or shape. Nodes can appear in multiple subNetworks for such cases as a wire connecting to a via or several wires connecting at anoaSteinerpoint. Although it is p...", methods_count: 10, enums_count: 0, filename: "classoaSubNetwork.yaml"});
CREATE (:Class {name: "oaParasiticNetwork", type: "Class", description: "Parasitic networks can be associated with nets in the block and occurrence domains. These networks are generally created by an extractor that analyzes the geometry of the nets to create the parasitics. If the extraction runs hierarchically one block at a time it will create a parasitic network on...", methods_count: 32, enums_count: 0, filename: "classoaParasiticNetwork.yaml"});
CREATE (:Class {name: "oaAreaBlockage", type: "Class", description: "The area blockage is most commonly used to prevent standard cells from being placed within a certain area.", methods_count: 5, enums_count: 0, filename: "classoaAreaBlockage.yaml"});
CREATE (:Class {name: "oaAreaHalo", type: "Class", description: "The area halo is most commonly used to prevent standard cells from being placed within a certain range of an instance. This is usually done to make sure there is enough space to properly route to the (presumably) large number of pins on the side of a block.Note that the oaAreaHalo object official...", methods_count: 6, enums_count: 0, filename: "classoaAreaHalo.yaml"});
CREATE (:Class {name: "oaLayerHalo", type: "Class", description: "The oaLayerHalo applies around the perimeter of an instance. It prohibits routing on the given layer parallel to the edge of the instance, but it allows routing perpendicular to the instance edge. This prevents long lines being routed parallel to the edge of the instance, which causes cross-coupl...", methods_count: 6, enums_count: 0, filename: "classoaLayerHalo.yaml"});
CREATE (:Class {name: "oaLayerRangeBlockage", type: "Class", description: "The mask numbers of layers are ordered, but their corresponding layer numbers may not be ordered. A mask number can also map to one or more layers.A mask range can be specified by a pair of lower and upper bound mask numbers, or a mask range can be an unbounded range where only the lower bound ma...", methods_count: 6, enums_count: 0, filename: "classoaLayerRangeBlockage.yaml"});
CREATE (:Class {name: "oaAreaBoundary", type: "Class", description: "Area boundaries are named and there can be multiple area boundaries in a givenoaBlock.", methods_count: 7, enums_count: 0, filename: "classoaAreaBoundary.yaml"});
CREATE (:Class {name: "oaModModuleScalarInst", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaModModuleScalarInst.yaml"});
CREATE (:Class {name: "oaModModuleBitInst", type: "Class", description: "oaModModuleBitInst objects refer to a masteroaModuleand are scoped to their parent module.", methods_count: 0, enums_count: 0, filename: "classoaModModuleBitInst.yaml"});
CREATE (:Class {name: "oaModModuleInst", type: "Class", description: "oaModModuleInst objects refer to a masteroaModuleand are scoped to their parent module.", methods_count: 1, enums_count: 0, filename: "classoaModModuleInst.yaml"});
CREATE (:Class {name: "oaOccDot", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaOccDot.yaml"});
CREATE (:Class {name: "oaModModuleVectorInst", type: "Class", description: "An oaModModuleVectorInst object is always in the module domain. It is an instance of a module as opposed to anoaModVectorInstwhich would be a vector instance of a design.", methods_count: 13, enums_count: 0, filename: "classoaModModuleVectorInst.yaml"});
CREATE (:Class {name: "oaModModuleVectorInstBit", type: "Class", description: "Explicitly-created vectorInstBits define a unique bit of a vectorInst definition since the bits of a vectorInst are not allowed to overlap with other vectorInsts.", methods_count: 10, enums_count: 0, filename: "classoaModModuleVectorInstBit.yaml"});
CREATE (:Class {name: "oaModVectorInstDef", type: "Class", description: "A vectorInstDef can be 'sparse' (have missing bits). Vectors do not have to start or end at zero. For example,a[22:25]is a legal vectorInst name. Vector indexes must be non-negative.An vectorInstDef is automatically created if necessary whenever applications create vectorInsts. Implicitly created...", methods_count: 13, enums_count: 0, filename: "classoaModVectorInstDef.yaml"});
CREATE (:Class {name: "oaModBundleNet", type: "Class", description: "", methods_count: 10, enums_count: 0, filename: "classoaModBundleNet.yaml"});
CREATE (:Class {name: "oaEndpointType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaEndpointType.yaml"});
CREATE (:Class {name: "oaOccAssignAssignment", type: "Class", description: "This type of connection assignment is useful for integrating a block of intellectual property that contain connection definition. An oaOccAssignAssignment can be used to insure that connectivity traversal applications search for connection assignments consistently in the entire design hierarchy.", methods_count: 1, enums_count: 0, filename: "classoaOccAssignAssignment.yaml"});
CREATE (:Class {name: "oaOccAssignValue", type: "Class", description: "the name of the net to use in place of the name of the net associated with the correspondingoaOccNetConnectDefobjectthe name of the net to use to externally connect to the terminal associated with the correspondingoaOccTermConnectDefobject", methods_count: 1, enums_count: 0, filename: "classoaOccAssignValue.yaml"});
CREATE (:Class {name: "oaLine", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaLine.yaml"});
CREATE (:Class {name: "oaScanChainSetType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaScanChainSetType.yaml"});
CREATE (:Class {name: "oaPath", type: "Class", description: "Two coincident and three collinear points are illegal, and an exception is thrown if these combinations are detected. You can useoaPointArray::compress()to remove these combinations. For more information on coincident and collinear points, seeoaPointArray::compress()Paths that have segments whose...", methods_count: 16, enums_count: 0, filename: "classoaPath.yaml"});
CREATE (:Class {name: "oaSeriesRL", type: "Class", description: "", methods_count: 7, enums_count: 0, filename: "classoaSeriesRL.yaml"});
CREATE (:Class {name: "oaNode", type: "Class", description: "Nodes are managed objects, but they can be loaded from disk into memory (and unloaded from memory back to disk) on request as part of the parasitic network to which they belong. A pointer to a node becomes invalid after the parasitic network to which it belongs has been unloaded.Nodes can have an...", methods_count: 26, enums_count: 0, filename: "classoaNode.yaml"});
CREATE (:Class {name: "oaArray<oaFig *>", });
CREATE (:Class {name: "oaArrayBase<oaFig *>", });
CREATE (:Class {name: "oaTermType", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaTermType.yaml"});
CREATE (:Class {name: "oaLayer", });
CREATE (:Class {name: "oaGroundedNode", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaGroundedNode.yaml"});
CREATE (:Class {name: "oaOccArc", type: "Class", description: "", methods_count: 7, enums_count: 0, filename: "classoaOccArc.yaml"});
CREATE (:Class {name: "oaBundleNet", type: "Class", description: "An oaBundleNet object can be viewed as a collection of single bit net members and represents a collection of logical connections. The index and ordering of each member of a bundle net is indicated by the bundle name representation (refer tooaBundleNamedocumentation for general description).For ex...", methods_count: 11, enums_count: 0, filename: "classoaBundleNet.yaml"});
CREATE (:Class {name: "oaBusNet", type: "Class", description: "Bus nets are named by the oaBusName convention, that is, it has a baseName and the start, stop, step value. A bus net object can be viewed as a collection of single bit logical connections.An example of oaBusNet--\"A[0:6:2]\"--It is a bus net consisting of 4oaBusNetBitobjects: A[0] A[2] A[4] A[6].T...", methods_count: 14, enums_count: 0, filename: "classoaBusNet.yaml"});
CREATE (:Class {name: "oaBusNetBit", type: "Class", description: "An oaBusNetBit can be explicitly created and used in other operations like creating terminals or instTerms. An explicitly created busNetBit must be explicitly destroyed.", methods_count: 10, enums_count: 0, filename: "classoaBusNetBit.yaml"});
CREATE (:Class {name: "oaScalarNet", type: "Class", description: "", methods_count: 8, enums_count: 0, filename: "classoaScalarNet.yaml"});
CREATE (:Class {name: "oaSigType", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaSigType.yaml"});
CREATE (:Class {name: "oaModModuleInstHeader", type: "Class", description: "The oaModModuleInstHeader class can be observed by deriving fromoaObserver<oaModModuleInstHeader>.", methods_count: 7, enums_count: 0, filename: "classoaModModuleInstHeader.yaml"});
CREATE (:Class {name: "oaMemNetIter", type: "Class", description: "For example, a collection of member nets for netawould contain all of the following nets:ax,y,aa*4The member net index is returned in thegetNext()function. This index indicates the member position of the specified net in the collection. For the example above, the iterator would return the followi...", methods_count: 1, enums_count: 0, filename: "classoaMemNetIter.yaml"});
CREATE (:Class {name: "oaVia", type: "Class", description: "A via may be either a standard via or a custom via. A standard via has a pre-defined set of via parameters that can be tailored to create a variety of vias to cover a variety of connections. The standard via references a standard via definition.A custom via is very much like an instance where, th...", methods_count: 20, enums_count: 0, filename: "classoaVia.yaml"});
CREATE (:Class {name: "oaVectorInst", type: "Class", description: "oaVectorInst objects are always in the block domain. They may be physical-only instances that are only in the block hierarchy, or they can be cross-domain instances that directly correspond to anoaModVectorInstin the module domain and anoaOccVectorInstin the occurrence domain.Note that there are ...", methods_count: 15, enums_count: 0, filename: "classoaVectorInst.yaml"});
CREATE (:Class {name: "oaCustomVia", type: "Class", description: "A Pcell custom via can be created with a subset of the parameters defined in the superMaster. Any parameters not specified will become default parameters which will track changes in the superMaster's parameter value. When a parameter is specified during creation or any subsequence calls to setPar...", methods_count: 10, enums_count: 0, filename: "classoaCustomVia.yaml"});
CREATE (:Class {name: "oaStdVia", type: "Class", description: "A standard via may be used as object associated with anoaRoute.A discussion of the creation of oaStdVia objects can be found in theRepresenting Vias in OpenAccesssection of the Programmers Guide. A discussion of the creation of oaStdVia objects can be found in theRepresenting Vias in OpenAccessse...", methods_count: 4, enums_count: 0, filename: "classoaStdVia.yaml"});
CREATE (:Class {name: "oaScalarInst", type: "Class", description: "oaScalarInst objects are always in the block domain. They may be physical-only instances that are only in the block hierarchy, or they can be cross-domain instances that directly correspond to anoaModScalarInstin the module domain and anoaOccScalarInstin the occurrence domain.", methods_count: 12, enums_count: 0, filename: "classoaScalarInst.yaml"});
CREATE (:Class {name: "oaPRBoundary", type: "Class", description: "For cell placement that is directed by sites in oaRows, the oaPRBoundary determines the aspect of the cell that must align with the site. For placement near a placement blockage, it is the oaPRBoundary that is excluded from the blockage.Some uses of the oaPRBoundary will be superseded by anoaSnap...", methods_count: 12, enums_count: 0, filename: "classoaPRBoundary.yaml"});
CREATE (:Class {name: "oaCoreBoxSpec", type: "Class", description: "The core box represents the limits of the core within the given design. At the full chip level, there will be rows of IO pads and peripheral routing that are outside the core box. For a block, the core box is closer in size to theoaPRBoundaryfor the design.The core box defines a set ofvirtualrows...", methods_count: 20, enums_count: 0, filename: "classoaCoreBoxSpec.yaml"});
CREATE (:Class {name: "oaPcellDef", type: "Class", description: "An oaPcellDef is used byoaDesign::defineSuperMaster()to turn anoaDesigninto a SuperMaster. The oaPcellDef can be returned from that SuperMaster withoaDesign::getPcellDef().The oaPcellDef class also provides a name/value table that the application can use to store user data. The oaPcellDef class a...", methods_count: 5, enums_count: 0, filename: "classoaPcellDef.yaml"});
CREATE (:Class {name: "oaOccText", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaOccText.yaml"});
CREATE (:Class {name: "oaOccEvalText", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaOccEvalText.yaml"});
CREATE (:Class {name: "oaNetTermArrayBase<oaNet *, oaUInt4>", });
CREATE (:Class {name: "oaObserver", type: "Class", description: "SeeoaObserverfor information on using Open Access observer template classes to derive and instantiate observers in an application.", methods_count: 6, enums_count: 0, filename: "classoaObserver_3oaParasiticNetwork_4.yaml"});
CREATE (:Class {name: "oaViaDirection", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaViaDirection.yaml"});
CREATE (:Class {name: "oaGuide", type: "Class", description: "The oaGuide class can be observed by deriving fromoaObserver<oaGuide>.", methods_count: 13, enums_count: 0, filename: "classoaGuide.yaml"});
CREATE (:Class {name: "oaSteiner", type: "Class", description: "The oaSteiner class can be observed by deriving fromoaObserver<oaSteiner>.", methods_count: 6, enums_count: 0, filename: "classoaSteiner.yaml"});
CREATE (:Class {name: "oaArc", type: "Class", description: "How Arcs are Specified in OpenAccessIn OpenAccess, arc angles are specified in positive radians, and are defined counterclockwise from a reference line that emanates from the center of the ellipse on which the arc is defined (at the intersection of imaginary x/y axes that pass through the ellipse...", methods_count: 11, enums_count: 0, filename: "classoaArc.yaml"});
CREATE (:Class {name: "oaDonut", type: "Class", description: "", methods_count: 12, enums_count: 0, filename: "classoaDonut.yaml"});
CREATE (:Class {name: "oaDot", type: "Class", description: "", methods_count: 7, enums_count: 0, filename: "classoaDot.yaml"});
CREATE (:Class {name: "oaEllipse", type: "Class", description: "", methods_count: 5, enums_count: 0, filename: "classoaEllipse.yaml"});
CREATE (:Class {name: "oaPathSeg", type: "Class", description: "", methods_count: 12, enums_count: 0, filename: "classoaPathSeg.yaml"});
CREATE (:Class {name: "oaPolygon", type: "Class", description: "1) No duplicate (coincident) points -- duplicate points throw an exception (useoaPointArray::compressto remove coincident points).2) No collinear edges -- that is, three or more collinear points are illegal and cause an exception to be thrown (useoaPointArray::compressto remove collinear points)....", methods_count: 6, enums_count: 0, filename: "classoaPolygon.yaml"});
CREATE (:Class {name: "oaText", type: "Class", description: "The origin of the text and its orientation define a line used for the bottom of normal characters, and the height defines the top of the normal characters. Characters with descenders or ascenders may extend outside of this range. The bBox of the oaText will enclose such descenders and ascenders. ...", methods_count: 19, enums_count: 0, filename: "classoaText.yaml"});
CREATE (:Class {name: "oaModScalarTerm", type: "Class", description: "oaModScalarTerm,oaOccScalarTerm, andoaScalarTermeach represent scalar terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModScalarTerm, the master is anoaModule, and each module in a design will have a set of zero or more mod...", methods_count: 7, enums_count: 0, filename: "classoaModScalarTerm.yaml"});
CREATE (:Class {name: "oaOccEllipse", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaOccEllipse.yaml"});
CREATE (:Class {name: "oaSymmetry", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaSymmetry.yaml"});
CREATE (:Class {name: "oaOccAttrDisplay", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaOccAttrDisplay.yaml"});
CREATE (:Class {name: "oaOccScalarTerm", type: "Class", description: "oaModScalarTerm, oaOccScalarTerm, andoaScalarTermeach represent scalar terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaOccScalarTerm, the master is anoaOccurrence, which corresponds to a unique usage of a module or a block...", methods_count: 6, enums_count: 0, filename: "classoaOccScalarTerm.yaml"});
CREATE (:Class {name: "oaTermConnectDef", type: "Class", description: "Applications that analyze design connectivity must resolve the name of the net to externally connect to the terminal associated with the oaTermConnectDef. The application searches up the design hierarchy for anoaAssignmentthat matches the assignment name specified in theoaAssignmentDefof the oaTe...", methods_count: 2, enums_count: 0, filename: "classoaTermConnectDef.yaml"});
CREATE (:Class {name: "oaAnalysisPointArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaAnalysisPointArray.yaml"});
CREATE (:Class {name: "oaAssignedNetSpec", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaAssignedNetSpec.yaml"});
CREATE (:Class {name: "oaArray<oaDesignObject *>", });
CREATE (:Class {name: "oaArrayBase<oaDesignObject *>", });
CREATE (:Class {name: "oaModAssignValue", type: "Class", description: "the name of the net to use in place of the name of the net associated with the correspondingoaModNetConnectDefobjectthe name of the net to use to externally connect to the terminal associated with the correspondingoaModTermConnectDefobject", methods_count: 5, enums_count: 0, filename: "classoaModAssignValue.yaml"});
CREATE (:Class {name: "oaConnStatus", type: "Class", description: "OpenAccess does not enforce these settings. Tools that modify the connectivity must enforce them.SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers. SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaConnStatus.yaml"});
CREATE (:Class {name: "oaLayerHeaderArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaLayerHeaderArray.yaml"});
CREATE (:Class {name: "oaArray<oaLayerHeader *>", });
CREATE (:Class {name: "oaArrayBase<oaLayerHeader *>", });
CREATE (:Class {name: "oaRouteMethod", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 3, enums_count: 0, filename: "classoaRouteMethod.yaml"});
CREATE (:Class {name: "oaAssignmentAttrType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaAssignmentAttrType.yaml"});
CREATE (:Class {name: "oaDesignAttrType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaDesignAttrType.yaml"});
CREATE (:Class {name: "oaInstTermAttrType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaInstTermAttrType.yaml"});
CREATE (:Class {name: "oaNetAttrType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaNetAttrType.yaml"});
CREATE (:Class {name: "oaTermAttrType", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaTermAttrType.yaml"});
CREATE (:Class {name: "oaResistor", type: "Class", description: "", methods_count: 20, enums_count: 0, filename: "classoaResistor.yaml"});
CREATE (:Class {name: "oaStdDevice", type: "Class", description: "", methods_count: 6, enums_count: 0, filename: "classoaStdDevice.yaml"});
CREATE (:Class {name: "oaTextLink", type: "Class", description: "For more information, refer toHow to Write a Plug-in to Calculate Bounding Boxes for Textin theProgrammers Guide.", methods_count: 4, enums_count: 0, filename: "classoaTextLink.yaml"});
CREATE (:Class {name: "oaPoleResidue", type: "Class", description: "Undo is not supported for oaPoleResidue objects.The oaPoleResidue class can be observed by deriving fromoaObserver<oaPoleResidue>. The oaPoleResidue class can be observed by deriving fromoaObserver<oaPoleResidue>.", methods_count: 11, enums_count: 0, filename: "classoaPoleResidue.yaml"});
CREATE (:Class {name: "oaPiPoleResidue", type: "Class", description: "Undo is not supported for oaPiPoleResidue objects.", methods_count: 11, enums_count: 0, filename: "classoaPiPoleResidue.yaml"});
CREATE (:Class {name: "oaModInstTerm", type: "Class", description: "oaModInstTerm,oaOccInstTerm, andoaInstTermeach represent instances of terminals on a different kind of master, where in each case the master represents a level of hierarchy in the design.For oaModInstTerm, the master is anoaModule, and each instance of a module in a design will have a set of zero...", methods_count: 25, enums_count: 0, filename: "classoaModInstTerm.yaml"});
CREATE (:Class {name: "oaOccDonut", type: "Class", description: "", methods_count: 5, enums_count: 0, filename: "classoaOccDonut.yaml"});
CREATE (:Class {name: "oaOccLine", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaOccLine.yaml"});
CREATE (:Class {name: "oaOccPath", type: "Class", description: "", methods_count: 8, enums_count: 0, filename: "classoaOccPath.yaml"});
CREATE (:Class {name: "oaOccRect", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaOccRect.yaml"});
CREATE (:Class {name: "oaHierPath", type: "Class", description: "", methods_count: 11, enums_count: 0, filename: "classoaHierPath.yaml"});
CREATE (:Class {name: "oaOccTermArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaOccTermArray.yaml"});
CREATE (:Class {name: "oaArray<oaOccTerm *>", });
CREATE (:Class {name: "oaArrayBase<oaOccTerm *>", });
CREATE (:Class {name: "oaNetTermArrayBase<oaModNet *, oaModTerm *>", });
CREATE (:Class {name: "oaDesignError", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaDesignError.yaml"});
CREATE (:Class {name: "oaDesignException", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaDesignException.yaml"});
CREATE (:Class {name: "oaException", });
CREATE (:Class {name: "oaDiode", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaDiode.yaml"});
CREATE (:Class {name: "oaSource", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaSource.yaml"});
CREATE (:Class {name: "oaScriptEngineLink", type: "Class", description: "", methods_count: 5, enums_count: 0, filename: "classoaScriptEngineLink.yaml"});
CREATE (:Class {name: "oaTextAlign", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaTextAlign.yaml"});
CREATE (:Class {name: "oaPcellFileObserver", type: "Class", description: "See oaObserver for information on using OpenAccess observer classes to derive and instantiate observers in an application.", methods_count: 6, enums_count: 0, filename: "classoaPcellFileObserver.yaml"});
CREATE (:Class {name: "oaTermArray", type: "Class", description: "", methods_count: 0, enums_count: 0, filename: "classoaTermArray.yaml"});
CREATE (:Class {name: "oaArray<oaTerm *>", });
CREATE (:Class {name: "oaArrayBase<oaTerm *>", });
CREATE (:Class {name: "oaTextDisplayIter", type: "Class", description: "The following example shows the suggested usage of oaTextDisplayIter:oaTextDisplayIter iter(textDisplay->getTextDisplays());oaTextDisplay*td; while (td = iter.getNext()) { ... } oaTextDisplayIter iter(textDisplay->getTextDisplays());oaTextDisplay*td; while (td = iter.getNext()) { ... }", methods_count: 3, enums_count: 0, filename: "classoaTextDisplayIter.yaml"});
CREATE (:Class {name: "oaArray<oaAnalysisPoint *>", });
CREATE (:Class {name: "oaArrayBase<oaAnalysisPoint *>", });
CREATE (:Class {name: "oaMarker", type: "Class", description: "Define an array of points to indicate the area or location of the violationAssign a message string that describes the violationAssign a second string that can be used as a tag for the violationAssign the name of the tool reporting the violationAssign a severity value for the violationDefine wheth...", methods_count: 21, enums_count: 0, filename: "classoaMarker.yaml"});
CREATE (:Class {name: "oaPcellObserver", type: "Class", description: "See oaObserver for information on using OpenAccess observer template classes to derive and instantiate observers in an application.", methods_count: 3, enums_count: 0, filename: "classoaPcellObserver.yaml"});
CREATE (:Class {name: "oaModTermConnectDef", type: "Class", description: "Applications that analyze design connectivity must resolve the name of the net to externally connect to the terminal associated with the oaModTermConnectDef. The application searches up the design hierarchy for anoaModAssignmentthat matches the assignment name specified in the oaModTermConnectDef...", methods_count: 2, enums_count: 0, filename: "classoaModTermConnectDef.yaml"});
CREATE (:Class {name: "oaFigGroup", type: "Class", description: "When a figure belongs to a FigGroup, it does not affect the caller�s ability to access, move, and change the figure as an individual object. It simply adds the ability to manipulate an entire set of figures together; functions includingoaFig::moveandoaFig::copycan be used for this purpose.When a ...", methods_count: 20, enums_count: 0, filename: "classoaFigGroup.yaml"});
CREATE (:Class {name: "oaOccNetConnectDef", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaOccNetConnectDef.yaml"});
CREATE (:Class {name: "oaOccTermConnectDef", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaOccTermConnectDef.yaml"});
CREATE (:Class {name: "oaClusterBoundary", type: "Class", description: "", methods_count: 8, enums_count: 0, filename: "classoaClusterBoundary.yaml"});
CREATE (:Class {name: "oaRowSpacingType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaRowSpacingType.yaml"});
CREATE (:Class {name: "oaOccInstAttrDisplay", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaOccInstAttrDisplay.yaml"});
CREATE (:Class {name: "oaOccInstPropDisplay", type: "Class", description: "", methods_count: 3, enums_count: 0, filename: "classoaOccInstPropDisplay.yaml"});
CREATE (:Class {name: "oaOccTextOverride", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaOccTextOverride.yaml"});
CREATE (:Class {name: "oaEvalText", type: "Class", description: "", methods_count: 6, enums_count: 0, filename: "classoaEvalText.yaml"});
CREATE (:Class {name: "oaOccBitNet", type: "Class", description: "You can have two or more bitNets that are equivalent. Equivalent bitNets are traversed separately or logically as the same net.You can create associate a connection definition,oaModNetConnectDef, with a bitNet. You can create associate a connection definition,oaModNetConnectDef, with a bitNet.", methods_count: 8, enums_count: 0, filename: "classoaOccBitNet.yaml"});
CREATE (:Class {name: "oaOccBusNetBit", type: "Class", description: "oaModBusNetBit, oaOccBusNetmBit, andoaBusNetBiteach represent a bit of a busNet on a different kind of master, where in each case the master represents a level of hierarchy in the design.ForoaModBusNetBit, the master is a module, and each module in a design will have a set of zero or more oaModBu...", methods_count: 11, enums_count: 0, filename: "classoaOccBusNetBit.yaml"});
CREATE (:Class {name: "oaOccScalarNet", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaOccScalarNet.yaml"});
CREATE (:Class {name: "oaPcellLink", type: "Class", description: "", methods_count: 5, enums_count: 0, filename: "classoaPcellLink.yaml"});
CREATE (:Class {name: "oaSegStyle", type: "Class", description: "Its supporting classes includes theoaEndStyleclass, which implements an enumerated type representing the different styles the end of a path segment may have.", methods_count: 15, enums_count: 0, filename: "classoaSegStyle.yaml"});
CREATE (:Class {name: "oaPinConnectMethod", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 3, enums_count: 0, filename: "classoaPinConnectMethod.yaml"});
CREATE (:Class {name: "oaOccBusNet", type: "Class", description: "", methods_count: 13, enums_count: 0, filename: "classoaOccBusNet.yaml"});
CREATE (:Class {name: "oaCellType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaCellType.yaml"});
CREATE (:Class {name: "oaPathStyle", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaPathStyle.yaml"});
CREATE (:Class {name: "oaOccBundleNet", type: "Class", description: "", methods_count: 13, enums_count: 0, filename: "classoaOccBundleNet.yaml"});
CREATE (:Class {name: "oaFont", type: "Class", description: "", methods_count: 4, enums_count: 0, filename: "classoaFont.yaml"});
CREATE (:Class {name: "oaArray<oaDesign *>", });
CREATE (:Class {name: "oaArrayBase<oaDesign *>", });
CREATE (:Class {name: "oaNetTermArrayBase<oaNet *, oaName>", });
CREATE (:Class {name: "oaRouteOptimizer", type: "Class", description: "During optimization, Steiner objects are created and deleted as required. When optimization is complete, the optimized routes cover exactly the same area covered by the original path segments and routes.Generally, routes are joined together and then split where necessary. Divisions can occur at o...", methods_count: 3, enums_count: 0, filename: "classoaRouteOptimizer.yaml"});
CREATE (:Class {name: "oaNetTermArrayBase<oaModNet *, oaUInt4>", });
CREATE (:Class {name: "oaPinType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaPinType.yaml"});
CREATE (:Class {name: "oaDesignViaVariantHeader", type: "Class", description: "", methods_count: 1, enums_count: 0, filename: "classoaDesignViaVariantHeader.yaml"});
CREATE (:Class {name: "oaViaVariantHeader", });
CREATE (:Class {name: "oaPlacementStatus", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaPlacementStatus.yaml"});
CREATE (:Class {name: "oaOccTraverser", type: "Class", description: "Thetraverse()function initiates the traversal, which can be controlled by a set of flags bits accessed by theflags()function. During the traversal, the virtual functions process*() are called for each kind of connectivity object.To control the expansion of the occurrence hierarchy, the applicatio...", methods_count: 8, enums_count: 0, filename: "classoaOccTraverser.yaml"});
CREATE (:Class {name: "oaOccProducer", type: "Class", description: "The virtualproduce()method initiates the producer. Overriding the produce function in a derivation class will enable custom ordering for the process*() set of functions.Header filtering of instances being processed is provided by overriding the startInstHeader or startModuleInstHeader set of func...", methods_count: 30, enums_count: 0, filename: "classoaOccProducer.yaml"});
CREATE (:Class {name: "oaMarkerSeverity", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaMarkerSeverity.yaml"});
CREATE (:Class {name: "oaCouplingCap", type: "Class", description: "A coupling capacitor between two nodes in the same parasitic network is considered alocalcoupling cap. Local coupling caps have a single representation in the database. When a coupling capacitor physically connects two different parasitic networks, it is represented in the database as two distinc...", methods_count: 10, enums_count: 0, filename: "classoaCouplingCap.yaml"});
CREATE (:Class {name: "oaClusterType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaClusterType.yaml"});
CREATE (:Class {name: "IRegionQueryPlugMgr", type: "Class", description: "", methods_count: 15, enums_count: 0, filename: "classIRegionQueryPlugMgr.yaml"});
CREATE (:Class {name: "IBase", });
CREATE (:Class {name: "oaRoutePattern", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaRoutePattern.yaml"});
CREATE (:Class {name: "oaTextDisplayFormat", type: "Class", description: "", methods_count: 2, enums_count: 0, filename: "classoaTextDisplayFormat.yaml"});
CREATE (:Class {name: "oaNetTermPair", type: "Class", description: "", methods_count: 9, enums_count: 0, filename: "classoaNetTermPair.yaml"});
CREATE (:Class {name: "oaRowFlipType", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaRowFlipType.yaml"});
CREATE (:Class {name: "oaMarkerDeleteWhen", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaMarkerDeleteWhen.yaml"});
CREATE (:Class {name: "oaEndStyle", type: "Class", description: "The oaEndStyle class is an enum wrapper class for oaEndStyleEnum values.SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers. SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaEndStyle.yaml"});
CREATE (:Class {name: "oaBlockDomainVisibility", type: "Class", description: "SeeEnum Wrappersin the Programmers Guide for a discussion of enum wrappers.", methods_count: 2, enums_count: 0, filename: "classoaBlockDomainVisibility.yaml"});

// Create relationships
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaModule"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:REFERENCES {via_method: "getBlock"}]->(b);
MATCH (a:Class {name: "oaModule"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModBusNetDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModBusTermDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModInstHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModInstTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModModuleInstHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getTopModule"}]->(b);
MATCH (a:Class {name: "oaModObject"}), (b:Class {name: "oaModVectorInstDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaAnalysisOpPoint"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getDesign"}]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaElmore"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaNode"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaOpPointHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaParasiticNetwork"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaPoleResidue"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaReducedModel"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignObject"}), (b:Class {name: "oaSubNetwork"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaPcellDef"}) CREATE (a)-[:REFERENCES {via_method: "getPcellDef"}]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getSuperMaster"}]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:REFERENCES {via_method: "getTopBlock"}]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getTopModule"}]->(b);
MATCH (a:Class {name: "oaDesign"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:REFERENCES {via_method: "getTopOccurrence"}]->(b);
MATCH (a:Class {name: "oaBlock"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlock"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlock"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlock"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBlock"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBlock"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getModule"}]->(b);
MATCH (a:Class {name: "oaOccurrence"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccurrence"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccurrence"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccurrence"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:REFERENCES {via_method: "getBlock"}]->(b);
MATCH (a:Class {name: "oaOccurrence"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getModule"}]->(b);
MATCH (a:Class {name: "oaOccurrence"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:REFERENCES {via_method: "getOccInst"}]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:REFERENCES {via_method: "getEndConn"}]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaRoute"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaRouteObjectArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRoute"}), (b:Class {name: "oaRouteStatus"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaGuide"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaRoute"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaSteiner"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaArc"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaDonut"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaDot"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaEllipse"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaLine"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaPath"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaPathSeg"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaPolygon"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaRect"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnFig"}), (b:Class {name: "oaNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaFigGroup"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaMarker"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaRow"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaAreaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaAreaHalo"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaLayerBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaLayerHalo"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaLayerRangeBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaLayerRangeHalo"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaAreaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaClusterBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaPRBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaSnapBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaGuide"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaRoute"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaSteiner"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFig"}), (b:Class {name: "oaFigGroupMem"}) CREATE (a)-[:REFERENCES {via_method: "getFigGroupMem"}]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:REFERENCES {via_method: "getBlock"}]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaBusNetDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaBusTermDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaCluster"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaCMap"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaFigGroupMem"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaGCellPattern"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaInstTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaLayerHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaLPPHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaPin"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaRowHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaScanChain"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaScanChainInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaScanChainSet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaTrackPattern"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockObject"}), (b:Class {name: "oaVectorInstDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRouteObjectArray"}), (b:Class {name: "oaArray<oaFig *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRouteObjectArray"}), (b:Class {name: "oaArrayBase<oaFig *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaModBusNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusNet"}), (b:Class {name: "oaModBusNetDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModBundleNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModBusNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModBusNetBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModScalarNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModNet"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusNetDef"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetDef"}), (b:Class {name: "oaModBusNetDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBusNetDef"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRecursionObserver"}), (b:Class {name: "oaBaseObserver"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRecursionObserver"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRecursionObserver"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRecursionObserver"}), (b:Class {name: "oaDesignArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaInstHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaCustomViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaStdViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaRefHeader"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:REFERENCES {via_method: "getSuperHeader"}]->(b);
MATCH (a:Class {name: "oaDesignArray"}), (b:Class {name: "oaArray<oaDesign *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignArray"}), (b:Class {name: "oaArrayBase<oaDesign *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaOccBitTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaOccBusTermDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaModBusTermBit"}) CREATE (a)-[:REFERENCES {via_method: "getModTerm"}]->(b);
MATCH (a:Class {name: "oaOccBusTermBit"}), (b:Class {name: "oaBusTermBit"}) CREATE (a)-[:REFERENCES {via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaOccBusTermBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaOccScalarTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitTerm"}), (b:Class {name: "oaOccTermConnectDef"}) CREATE (a)-[:REFERENCES {via_method: "getConnectDef"}]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccBitTerm"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccBundleTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccBusTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccBusTermBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccScalarTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:REFERENCES {via_method: "getModTerm"}]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:REFERENCES {via_method: "getReflection"}]->(b);
MATCH (a:Class {name: "oaOccTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:REFERENCES {via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccBusNetDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccBusTermDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccInstHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccInstTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccModuleInstHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:REFERENCES {via_method: "getTopOccurrence"}]->(b);
MATCH (a:Class {name: "oaOccObject"}), (b:Class {name: "oaOccVectorInstDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermDef"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTermDef"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModBitTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModBusTermBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModBusTermDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModBusTermBit"}), (b:Class {name: "oaModBitNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaBitTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaBusTermBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaBusTermDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaBusTermBit"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccMemNetIter"}), (b:Class {name: "oaBaseMemNetIter"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccMemNetIter"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:REFERENCES {via_method: "getNext"}]->(b);
MATCH (a:Class {name: "oaBaseMemNetIter"}), (b:Class {name: "oaMemNetIter"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBaseMemNetIter"}), (b:Class {name: "oaModMemNetIter"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBaseMemNetIter"}), (b:Class {name: "oaOccMemNetIter"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccBundleNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccBusNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccBusNetBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccScalarNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:REFERENCES {via_method: "getAssignedNet"}]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:REFERENCES {via_method: "getModNet"}]->(b);
MATCH (a:Class {name: "oaOccNet"}), (b:Class {name: "oaNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaAttrDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaInstAttrDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaInstPropDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaPropDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplay"}), (b:Class {name: "oaTextOverride"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaArc"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaDonut"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaDot"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaEllipse"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaLine"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaPath"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaPathSeg"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaPolygon"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaRect"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaLPPHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getShieldedNet2"}]->(b);
MATCH (a:Class {name: "oaShape"}), (b:Class {name: "oaRouteStatus"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaArc"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaDonut"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaDot"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaEllipse"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaLine"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaPath"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaPathSeg"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaPolygon"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaRect"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPinFig"}), (b:Class {name: "oaPin"}) CREATE (a)-[:REFERENCES {via_method: "getPin"}]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:REFERENCES {via_method: "getObject"}]->(b);
MATCH (a:Class {name: "oaAttrDisplay"}), (b:Class {name: "oaAttrDisplay"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaInstAttrDisplay"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaInstAttrDisplay"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaInstPropDisplay"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaInstPropDisplay"}), (b:Class {name: "oaProp"}) CREATE (a)-[:REFERENCES {via_method: "getMasterProp"}]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaPropDisplay"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPropDisplay"}), (b:Class {name: "oaProp"}) CREATE (a)-[:REFERENCES {via_method: "getProp"}]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaTextOverride"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaTextOverride"}), (b:Class {name: "oaText"}) CREATE (a)-[:REFERENCES {via_method: "getMasterText"}]->(b);
MATCH (a:Class {name: "oaElmore"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getReceiver"}]->(b);
MATCH (a:Class {name: "oaElmore"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaElmore"}), (b:Class {name: "oaElmore"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaElmore"}), (b:Class {name: "oaPiElmore"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaElmore"}), (b:Class {name: "oaLumpedElmore"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaElmore"}), (b:Class {name: "oaReducedModel"}) CREATE (a)-[:REFERENCES {via_method: "getReducedModel"}]->(b);
MATCH (a:Class {name: "oaPiElmore"}), (b:Class {name: "oaReducedModel"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPiElmore"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPiElmore"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPiElmore"}), (b:Class {name: "oaPiElmore"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPiElmore"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaLumpedElmore"}), (b:Class {name: "oaReducedModel"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLumpedElmore"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaLumpedElmore"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLumpedElmore"}), (b:Class {name: "oaLumpedElmore"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaLumpedElmore"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaReducedModel"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:REFERENCES {via_method: "getDriver"}]->(b);
MATCH (a:Class {name: "oaReducedModel"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaReducedModel"}), (b:Class {name: "oaLumpedElmore"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaReducedModel"}), (b:Class {name: "oaPiElmore"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaReducedModel"}), (b:Class {name: "oaPiPoleResidue"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaReducedModel"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:REFERENCES {via_method: "getAnalysisPoint"}]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRect"}), (b:Class {name: "oaRect"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaInstAttrType"}), (b:Class {name: "oaAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrType"}), (b:Class {name: "oaAssignmentAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrType"}), (b:Class {name: "oaDesignAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrType"}), (b:Class {name: "oaInstAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrType"}), (b:Class {name: "oaInstTermAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrType"}), (b:Class {name: "oaNetAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAttrType"}), (b:Class {name: "oaTermAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArray"}), (b:Class {name: "oaNetTermArrayBase<oaNet *, oaTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaOccBusTermDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaModBusTerm"}) CREATE (a)-[:REFERENCES {via_method: "getModTerm"}]->(b);
MATCH (a:Class {name: "oaOccBusTerm"}), (b:Class {name: "oaBusTerm"}) CREATE (a)-[:REFERENCES {via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaModBusTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaModBusTermDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModBusTerm"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaBusTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaBusTermDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaBusTerm"}), (b:Class {name: "oaNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccPathSeg"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPathSeg"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPathSeg"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPathSeg"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccArc"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccDonut"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccDot"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccEllipse"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccLine"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccPath"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccPathSeg"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccPolygon"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccRect"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:REFERENCES {via_method: "get"}]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaHierPath"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaLPPHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaPin"}) CREATE (a)-[:REFERENCES {via_method: "getPin"}]->(b);
MATCH (a:Class {name: "oaOccShape"}), (b:Class {name: "oaShape"}) CREATE (a)-[:REFERENCES {via_method: "getShape"}]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaOccBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaOccDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccArrayInst"}), (b:Class {name: "oaArrayInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaOccDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaOccArrayInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaOccScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitInst"}), (b:Class {name: "oaOccVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccArrayInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaOccInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaOccDesignInst"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccModuleVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccArrayInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccModuleScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccModuleVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getMasterOccurrence"}]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaArrayInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaArrayInst"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPin"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPin"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPin"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPin"}), (b:Class {name: "oaPin"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPin"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaBitTerm"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaBundleTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaBusTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaBusTermBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaScalarTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaNet"}) CREATE (a)-[:DEPENDS_ON {via_method: "getNet", via_param: True}]->(b);
MATCH (a:Class {name: "oaTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaModConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaModNetConnectDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaModBitNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaAssignmentDef"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModNetConnectDef"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaModConnectDef"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModConnectDef"}), (b:Class {name: "oaModNetConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModConnectDef"}), (b:Class {name: "oaModTermConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaModBusNetBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaModScalarNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaModNetConnectDef"}) CREATE (a)-[:REFERENCES {via_method: "getConnectDef"}]->(b);
MATCH (a:Class {name: "oaModBitNet"}), (b:Class {name: "oaModBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getPreferredEquivalent"}]->(b);
MATCH (a:Class {name: "oaAssignment"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignment"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignment"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignment"}), (b:Class {name: "oaAssignAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignment"}), (b:Class {name: "oaAssignValue"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignment"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaBusNetDef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetDef"}), (b:Class {name: "oaBusNetDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBusNetDef"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusTermDef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusTermDef"}), (b:Class {name: "oaBusTermDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBusTermDef"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaCluster"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCluster"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCluster"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCluster"}), (b:Class {name: "oaCluster"}) CREATE (a)-[:REFERENCES {via_method: "getParent"}]->(b);
MATCH (a:Class {name: "oaCluster"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaCMap"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCMap"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCMap"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCMap"}), (b:Class {name: "oaCMap"}) CREATE (a)-[:REFERENCES {via_method: "getCMap"}]->(b);
MATCH (a:Class {name: "oaConnectDef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnectDef"}), (b:Class {name: "oaNetConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaConnectDef"}), (b:Class {name: "oaTermConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroupMem"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroupMem"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroupMem"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroupMem"}), (b:Class {name: "oaFig"}) CREATE (a)-[:REFERENCES {via_method: "getFig"}]->(b);
MATCH (a:Class {name: "oaFigGroupMem"}), (b:Class {name: "oaFigGroup"}) CREATE (a)-[:REFERENCES {via_method: "getFigGroup"}]->(b);
MATCH (a:Class {name: "oaGCellPattern"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGCellPattern"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGCellPattern"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGCellPattern"}), (b:Class {name: "oaGCellPattern"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaNetTermPosArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaNetTermNameArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaNetTermArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaInstTerm"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaInstTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaLayerHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHeader"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaLayerHeader"}), (b:Class {name: "oaLayer"}) CREATE (a)-[:REFERENCES {via_method: "getLayer"}]->(b);
MATCH (a:Class {name: "oaLPPHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLPPHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLPPHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLPPHeader"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaLPPHeader"}), (b:Class {name: "oaLayer"}) CREATE (a)-[:REFERENCES {via_method: "getLayer"}]->(b);
MATCH (a:Class {name: "oaLPPHeader"}), (b:Class {name: "oaLayerHeader"}) CREATE (a)-[:REFERENCES {via_method: "getLayerHeader"}]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaBundleNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaBusNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaBusNetBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaScalarNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaNet"}), (b:Class {name: "oaSigType"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRowHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRowHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRowHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRowHeader"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaScanChain"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChain"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:REFERENCES {via_method: "getStopObject"}]->(b);
MATCH (a:Class {name: "oaScanChain"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChain"}), (b:Class {name: "oaScanChain"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaScanChain"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaScanChainInst"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChainInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChainInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChainInst"}), (b:Class {name: "oaScanChainInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaScanChainInst"}), (b:Class {name: "oaInstTerm"}) CREATE (a)-[:REFERENCES {via_method: "getOutInstTerm"}]->(b);
MATCH (a:Class {name: "oaScanChainInst"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInstance"}]->(b);
MATCH (a:Class {name: "oaScanChainSet"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChainSet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChainSet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScanChainSet"}), (b:Class {name: "oaScanChainSet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaTrackPattern"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTrackPattern"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTrackPattern"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTrackPattern"}), (b:Class {name: "oaTrackPattern"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaVectorInstDef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstDef"}), (b:Class {name: "oaVectorInstDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaVectorInstDef"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaModBitNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaModBusNetBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBusNetBit"}), (b:Class {name: "oaModBusNetDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaModBitNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaModScalarNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModScalarNet"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:REFERENCES {via_method: "getMember"}]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaModBundleTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBundleTerm"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModBitTerm"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModBundleTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModBusTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModBusTermBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModScalarTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:DEPENDS_ON {via_method: "getNet", via_param: True}]->(b);
MATCH (a:Class {name: "oaModTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaDesignUndoObserverBase"}), (b:Class {name: "oaDesignUndoObserver"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignUndoObserver"}), (b:Class {name: "oaDesignUndoObserverBase"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBaseMemNetCollection"}), (b:Class {name: "oaMemNetCollection"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBaseMemNetCollection"}), (b:Class {name: "oaModMemNetCollection"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBaseMemNetCollection"}), (b:Class {name: "oaOccMemNetCollection"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMemNetCollection"}), (b:Class {name: "oaBaseMemNetCollection"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMemNetCollection"}), (b:Class {name: "oaNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModMemNetCollection"}), (b:Class {name: "oaBaseMemNetCollection"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModMemNetCollection"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccMemNetCollection"}), (b:Class {name: "oaBaseMemNetCollection"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccMemNetCollection"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaModDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaModScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitInst"}), (b:Class {name: "oaModVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaModInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaModDesignInst"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModModuleVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModModuleScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModModuleVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getMasterModule"}]->(b);
MATCH (a:Class {name: "oaModInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaModBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaModDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaModScalarInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModScalarInst"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModVectorInstBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModVectorInstBit"}), (b:Class {name: "oaModVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaAssignAssignment"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaInst"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaAssignAssignment"}), (b:Class {name: "oaAssignmentDef"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaAssignValue"}), (b:Class {name: "oaAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignValue"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignValue"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignValue"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignValue"}), (b:Class {name: "oaAssignValue"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAssignValue"}), (b:Class {name: "oaInst"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaArrayInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaCluster"}) CREATE (a)-[:REFERENCES {via_method: "getCluster"}]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInst"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaArrayInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitInst"}), (b:Class {name: "oaVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaCustomVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaStdVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaArrayInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaRef"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModVectorInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaModVectorInst"}), (b:Class {name: "oaModVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModInstHeader"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInstHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInstHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInstHeader"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaModInstHeader"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getMasterModule"}]->(b);
MATCH (a:Class {name: "oaModInstHeader"}), (b:Class {name: "oaModInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getSuperHeader"}]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaRow"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaRow"}), (b:Class {name: "oaRowHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:REFERENCES {via_method: "getMember"}]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaModBundleTerm"}) CREATE (a)-[:REFERENCES {via_method: "getModTerm"}]->(b);
MATCH (a:Class {name: "oaOccBundleTerm"}), (b:Class {name: "oaBundleTerm"}) CREATE (a)-[:REFERENCES {via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaBundleTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:REFERENCES {via_method: "getMember"}]->(b);
MATCH (a:Class {name: "oaBundleTerm"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleTerm"}), (b:Class {name: "oaBundleTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBundleTerm"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaMutualInductor"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMutualInductor"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMutualInductor"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMutualInductor"}), (b:Class {name: "oaMutualInductor"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaMutualInductor"}), (b:Class {name: "oaInductor"}) CREATE (a)-[:REFERENCES {via_method: "getOtherInductor"}]->(b);
MATCH (a:Class {name: "oaMutualInductor"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaMutualInductor"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaSeriesRL"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaStdDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaCouplingCap"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaDiode"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaInductor"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaResistor"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDevice"}), (b:Class {name: "oaParasiticNetwork"}) CREATE (a)-[:DEPENDS_ON {via_param: True, via_method: "getParasiticNetwork"}]->(b);
MATCH (a:Class {name: "oaInductor"}), (b:Class {name: "oaStdDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInductor"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInductor"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInductor"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInductor"}), (b:Class {name: "oaInductor"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAnalysisPoint"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAnalysisPoint"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAnalysisPoint"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAnalysisPoint"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModTermArray"}), (b:Class {name: "oaArray<oaModTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTermArray"}), (b:Class {name: "oaArrayBase<oaModTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockageQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaBlockageQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaBoundaryQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaFigGroupQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaGuideQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaInstQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaLayerRangeBlockageQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaMarkerQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaPlacementBlockageQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaRowQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaShapeQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaSteinerQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaViaQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRegionQuery"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaAnalysisOpPoint"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAnalysisOpPoint"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAnalysisOpPoint"}), (b:Class {name: "oaAnalysisOpPoint"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAnalysisOpPoint"}), (b:Class {name: "oaOpPointHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaAnalysisOpPoint"}), (b:Class {name: "oaOpPoint"}) CREATE (a)-[:REFERENCES {via_method: "getOpPoint"}]->(b);
MATCH (a:Class {name: "oaOpPointHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOpPointHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOpPointHeader"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOpPointHeader"}), (b:Class {name: "oaOpPoint"}) CREATE (a)-[:REFERENCES {via_method: "getOpPoint"}]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaSnapBoundary"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaSnapBoundary"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaAreaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaClusterBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaPRBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundary"}), (b:Class {name: "oaSnapBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaOccDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaOccVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaOccVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaVectorInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccVectorInst"}), (b:Class {name: "oaModVectorInst"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaOccBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaOccDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaScalarInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccScalarInst"}), (b:Class {name: "oaModScalarInst"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaOccBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaOccDesignInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaOccVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccVectorInstBit"}), (b:Class {name: "oaModVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getInstHeader"}]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaModInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getModInstHeader"}]->(b);
MATCH (a:Class {name: "oaOccInstHeader"}), (b:Class {name: "oaOccInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getSuperHeader"}]->(b);
MATCH (a:Class {name: "oaTextDisplayCollection"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInstHeader"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstHeader"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaInstHeader"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaCustomViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaStdViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaHeader"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaCustomViaHeader"}), (b:Class {name: "oaViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomViaHeader"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomViaHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomViaHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomViaHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdViaHeader"}), (b:Class {name: "oaViaHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdViaHeader"}), (b:Class {name: "oaRefHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdViaHeader"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdViaHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdViaHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBoundaryQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroupQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuideQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockageQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMarkerQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPlacementBlockageQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaRowQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShapeQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaShapeQuery"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:REFERENCES {via_method: "getOccShape"}]->(b);
MATCH (a:Class {name: "oaSteinerQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaViaQuery"}), (b:Class {name: "oaRegionQuery"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalTextLink"}), (b:Class {name: "oaEvalTextLink"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaOccBusNetDef"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetDef"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModNetTermNameArray"}), (b:Class {name: "oaNetTermArrayBase<oaModNet *, oaName>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArrayBase"}), (b:Class {name: "oaModNetTermArray"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArrayBase"}), (b:Class {name: "oaModNetTermNameArray"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArrayBase"}), (b:Class {name: "oaModNetTermPosArray"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArrayBase"}), (b:Class {name: "oaNetTermArray"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArrayBase"}), (b:Class {name: "oaNetTermNameArray"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermArrayBase"}), (b:Class {name: "oaNetTermPosArray"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNetTermArray"}), (b:Class {name: "oaNetTermArrayBase<oaModNet *, oaModTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModNetTermPosArray"}), (b:Class {name: "oaNetTermArrayBase<oaModNet *, oaUInt4>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermNameArray"}), (b:Class {name: "oaNetTermArrayBase<oaNet *, oaName>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetTermPosArray"}), (b:Class {name: "oaNetTermArrayBase<oaNet *, oaUInt4>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstDef"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccVectorInstDef"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaVectorInstBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaVectorInstBit"}), (b:Class {name: "oaVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccModuleVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccModuleScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccModuleVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaOccModuleInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaOccModuleInst"}), (b:Class {name: "oaModModuleInst"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaOccModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaOccModuleScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleBitInst"}), (b:Class {name: "oaOccModuleVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaOccModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaOccModuleVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInst"}), (b:Class {name: "oaOccVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaOccModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaOccModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccModuleScalarInst"}), (b:Class {name: "oaModModuleScalarInst"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaOccModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaOccModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaOccVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccModuleVectorInstBit"}), (b:Class {name: "oaModModuleVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getModInst"}]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaBitTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaScalarTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaScalarTerm"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaBusTermBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaScalarTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaTermConnectDef"}) CREATE (a)-[:REFERENCES {via_method: "getConnectDef"}]->(b);
MATCH (a:Class {name: "oaBitTerm"}), (b:Class {name: "oaBitTerm"}) CREATE (a)-[:REFERENCES {via_method: "getSupplySensitivity"}]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaModAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaModAssignAssignment"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModAssignAssignment"}), (b:Class {name: "oaAssignmentDef"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModAssignment"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignment"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignment"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignment"}), (b:Class {name: "oaModAssignAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignment"}), (b:Class {name: "oaModAssignValue"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignment"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaNetConnectDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaNetConnectDef"}), (b:Class {name: "oaAssignmentDef"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaBusNetBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaScalarNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaNetConnectDef"}) CREATE (a)-[:REFERENCES {via_method: "getConnectDef"}]->(b);
MATCH (a:Class {name: "oaBitNet"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getShieldNet2"}]->(b);
MATCH (a:Class {name: "oaOccPolygon"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPolygon"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPolygon"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPolygon"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerBlockage"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerBlockage"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerBlockage"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerBlockage"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerBlockage"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerBlockage"}), (b:Class {name: "oaLayerHeader"}) CREATE (a)-[:REFERENCES {via_method: "getLayerHeader"}]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaAreaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaAreaHalo"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaLayerBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaLayerHalo"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaLayerRangeBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaLayerRangeHalo"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBlockage"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getOwner"}]->(b);
MATCH (a:Class {name: "oaOccAssignment"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignment"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignment"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignment"}), (b:Class {name: "oaOccAssignAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignment"}), (b:Class {name: "oaOccAssignValue"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignment"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccConnectDef"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccConnectDef"}), (b:Class {name: "oaOccNetConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccConnectDef"}), (b:Class {name: "oaOccTermConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaOccInst"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaTerm"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaOccInstTerm"}) CREATE (a)-[:REFERENCES {via_method: "getReflection"}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaInstTerm"}) CREATE (a)-[:REFERENCES {via_method: "getInstTerm"}]->(b);
MATCH (a:Class {name: "oaOccInstTerm"}), (b:Class {name: "oaModInstTerm"}) CREATE (a)-[:REFERENCES {via_method: "getModInstTerm"}]->(b);
MATCH (a:Class {name: "oaOccModuleInstHeader"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInstHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInstHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccModuleInstHeader"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_method: "getMaster"}]->(b);
MATCH (a:Class {name: "oaOccModuleInstHeader"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:REFERENCES {via_method: "getMasterOccurrence"}]->(b);
MATCH (a:Class {name: "oaOccModuleInstHeader"}), (b:Class {name: "oaModModuleInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getModModuleInstHeader"}]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaModBusTermBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaModScalarTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBitTerm"}), (b:Class {name: "oaModTermConnectDef"}) CREATE (a)-[:REFERENCES {via_method: "getConnectDef"}]->(b);
MATCH (a:Class {name: "oaModBusTermDef"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBusTermDef"}), (b:Class {name: "oaModBusTermDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBusTermDef"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModMemNetIter"}), (b:Class {name: "oaBaseMemNetIter"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModMemNetIter"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:REFERENCES {via_method: "getNext"}]->(b);
MATCH (a:Class {name: "oaLayerRangeHalo"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeHalo"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeHalo"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeHalo"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeHalo"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeHalo"}), (b:Class {name: "oaLayerRangeHalo"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaOccPropDisplay"}), (b:Class {name: "oaOccTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPropDisplay"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPropDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPropDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPropDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPropDisplay"}), (b:Class {name: "oaProp"}) CREATE (a)-[:REFERENCES {via_method: "getProp"}]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaOccAttrDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaOccInstAttrDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaOccInstPropDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaOccPropDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextDisplay"}), (b:Class {name: "oaOccTextOverride"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSubNetwork"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSubNetwork"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSubNetwork"}), (b:Class {name: "oaSubNetwork"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaSubNetwork"}), (b:Class {name: "oaParasiticNetwork"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getParasiticNetwork"}]->(b);
MATCH (a:Class {name: "oaSubNetwork"}), (b:Class {name: "oaFig"}) CREATE (a)-[:REFERENCES {via_method: "getFig"}]->(b);
MATCH (a:Class {name: "oaParasiticNetwork"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:DEPENDS_ON {via_param: True, via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaParasiticNetwork"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaParasiticNetwork"}), (b:Class {name: "oaParasiticNetwork"}) CREATE (a)-[:REFERENCES {via_method: "getParent"}]->(b);
MATCH (a:Class {name: "oaParasiticNetwork"}), (b:Class {name: "oaAnalysisPointArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaParasiticNetwork"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaAreaBlockage"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBlockage"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBlockage"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBlockage"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBlockage"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBlockage"}), (b:Class {name: "oaAreaBlockage"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAreaHalo"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaHalo"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaHalo"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaAreaHalo"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaHalo"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaLayerHalo"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaLayerHalo"}), (b:Class {name: "oaLayerHeader"}) CREATE (a)-[:REFERENCES {via_method: "getLayerHeader"}]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockage"}), (b:Class {name: "oaBlockage"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockage"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockage"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockage"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockage"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerRangeBlockage"}), (b:Class {name: "oaLayerRangeBlockage"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaAreaBoundary"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaAreaBoundary"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaModModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaModModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaModModuleScalarInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModModuleScalarInst"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaModModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaModModuleScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleBitInst"}), (b:Class {name: "oaModModuleVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModModuleVectorInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModModuleScalarInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModModuleVectorInstBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInst"}), (b:Class {name: "oaModModuleInstHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaOccDot"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDot"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDot"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDot"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModModuleVectorInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModModuleVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaModModuleVectorInst"}), (b:Class {name: "oaModVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModModuleBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModModuleInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModModuleVectorInstBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModModuleVectorInstBit"}), (b:Class {name: "oaModVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaModVectorInstDef"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModVectorInstDef"}), (b:Class {name: "oaModVectorInstDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModVectorInstDef"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModBundleNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:REFERENCES {via_method: "getMember"}]->(b);
MATCH (a:Class {name: "oaModBundleNet"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBundleNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBundleNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModBundleNet"}), (b:Class {name: "oaModBundleNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModBundleNet"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccAssignAssignment"}), (b:Class {name: "oaOccAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignAssignment"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignAssignment"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignAssignment"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignValue"}), (b:Class {name: "oaOccAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignValue"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignValue"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAssignValue"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLine"}), (b:Class {name: "oaLine"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPath"}), (b:Class {name: "oaPath"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaSeriesRL"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaEndpointType"}) CREATE (a)-[:REFERENCES {via_method: "getEndpoint"}]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaNode"}) CREATE (a)-[:REFERENCES {via_method: "getOtherNode"}]->(b);
MATCH (a:Class {name: "oaSeriesRL"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaNode"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNode"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNode"}), (b:Class {name: "oaGroundedNode"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNode"}), (b:Class {name: "oaNode"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaNode"}), (b:Class {name: "oaParasiticNetwork"}) CREATE (a)-[:DEPENDS_ON {via_param: True, via_method: "getParasiticNetwork"}]->(b);
MATCH (a:Class {name: "oaGroundedNode"}), (b:Class {name: "oaNode"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGroundedNode"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGroundedNode"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGroundedNode"}), (b:Class {name: "oaGroundedNode"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaGroundedNode"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccArc"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArc"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArc"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccArc"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleNet"}), (b:Class {name: "oaNet"}) CREATE (a)-[:REFERENCES {via_method: "getMember"}]->(b);
MATCH (a:Class {name: "oaBundleNet"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBundleNet"}), (b:Class {name: "oaBundleNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBundleNet"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaBusNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusNet"}), (b:Class {name: "oaBusNetDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaBusNetBit"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaBusNetBit"}), (b:Class {name: "oaBusNetDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaScalarNet"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaScalarNet"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModModuleInstHeader"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInstHeader"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInstHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModModuleInstHeader"}), (b:Class {name: "oaModule"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getMasterModule"}]->(b);
MATCH (a:Class {name: "oaMemNetIter"}), (b:Class {name: "oaBaseMemNetIter"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMemNetIter"}), (b:Class {name: "oaNet"}) CREATE (a)-[:REFERENCES {via_method: "getNext"}]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaCustomVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaStdVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaViaHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaRoute"}) CREATE (a)-[:REFERENCES {via_method: "getRoute"}]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getShieldedNet2"}]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaViaDirection"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaRouteStatus"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaVia"}), (b:Class {name: "oaRouteTopology"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaVectorInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaVectorInstBit"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaVectorInst"}), (b:Class {name: "oaVectorInstDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaCustomVia"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaCustomVia"}), (b:Class {name: "oaCustomViaHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaVia"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaStdVia"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaStdVia"}), (b:Class {name: "oaStdViaHeader"}) CREATE (a)-[:REFERENCES {via_method: "getHeader"}]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaBitInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaInst"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaRef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaScalarInst"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaScalarInst"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaPRBoundary"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPRBoundary"}), (b:Class {name: "oaCoreBoxSpec"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccText"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccText"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccText"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccText"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccText"}), (b:Class {name: "oaOccEvalText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEvalText"}), (b:Class {name: "oaOccText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEvalText"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEvalText"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEvalText"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEvalText"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaObserver"}), (b:Class {name: "oaBaseObserver"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaGuide"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaLayerHeader"}) CREATE (a)-[:REFERENCES {via_method: "getEndLayerHeader"}]->(b);
MATCH (a:Class {name: "oaGuide"}), (b:Class {name: "oaRoute"}) CREATE (a)-[:REFERENCES {via_method: "getRoute"}]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaSteiner"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaSteiner"}), (b:Class {name: "oaLayerHeader"}) CREATE (a)-[:REFERENCES {via_method: "getLayerHeader"}]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaArc"}), (b:Class {name: "oaArc"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDonut"}), (b:Class {name: "oaDonut"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDot"}), (b:Class {name: "oaDot"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEllipse"}), (b:Class {name: "oaEllipse"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaSegStyle"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaRoute"}) CREATE (a)-[:REFERENCES {via_method: "getRoute"}]->(b);
MATCH (a:Class {name: "oaPathSeg"}), (b:Class {name: "oaRouteTopology"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPolygon"}), (b:Class {name: "oaPolygon"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaEvalText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaText"}), (b:Class {name: "oaText"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaModBitTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaModScalarTerm"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModScalarTerm"}), (b:Class {name: "oaModule"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccEllipse"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEllipse"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEllipse"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccEllipse"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAttrDisplay"}), (b:Class {name: "oaOccTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAttrDisplay"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAttrDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAttrDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccAttrDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:REFERENCES {via_method: "getObject"}]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaOccBitTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaModScalarTerm"}) CREATE (a)-[:REFERENCES {via_method: "getModTerm"}]->(b);
MATCH (a:Class {name: "oaOccScalarTerm"}), (b:Class {name: "oaScalarTerm"}) CREATE (a)-[:REFERENCES {via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaTermConnectDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaBitTerm"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaTermConnectDef"}), (b:Class {name: "oaAssignmentDef"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaAnalysisPointArray"}), (b:Class {name: "oaArray<oaAnalysisPoint *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAnalysisPointArray"}), (b:Class {name: "oaArrayBase<oaAnalysisPoint *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignedNetSpec"}), (b:Class {name: "oaArray<oaDesignObject *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignedNetSpec"}), (b:Class {name: "oaArrayBase<oaDesignObject *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignValue"}), (b:Class {name: "oaModAssignment"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignValue"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignValue"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignValue"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModAssignValue"}), (b:Class {name: "oaModAssignValue"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModAssignValue"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaLayerHeaderArray"}), (b:Class {name: "oaArray<oaLayerHeader *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaLayerHeaderArray"}), (b:Class {name: "oaArrayBase<oaLayerHeader *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaAssignmentAttrType"}), (b:Class {name: "oaAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignAttrType"}), (b:Class {name: "oaAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaInstTermAttrType"}), (b:Class {name: "oaAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaNetAttrType"}), (b:Class {name: "oaAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTermAttrType"}), (b:Class {name: "oaAttrType"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaResistor"}), (b:Class {name: "oaStdDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaResistor"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaResistor"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaResistor"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaResistor"}), (b:Class {name: "oaResistor"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaCouplingCap"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaDiode"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaInductor"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaResistor"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaEndpointType"}) CREATE (a)-[:REFERENCES {via_method: "getEndpoint"}]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaNode"}) CREATE (a)-[:REFERENCES {via_method: "getOtherNode"}]->(b);
MATCH (a:Class {name: "oaStdDevice"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPoleResidue"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getReceiver"}]->(b);
MATCH (a:Class {name: "oaPoleResidue"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPoleResidue"}), (b:Class {name: "oaPoleResidue"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPoleResidue"}), (b:Class {name: "oaPiPoleResidue"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getPiPoleResidue"}]->(b);
MATCH (a:Class {name: "oaPiPoleResidue"}), (b:Class {name: "oaReducedModel"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPiPoleResidue"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaPiPoleResidue"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaPiPoleResidue"}), (b:Class {name: "oaPiPoleResidue"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPiPoleResidue"}), (b:Class {name: "oaAnalysisPoint"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModNetTermPosArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModNetTermNameArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModNetTermArray"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModInstTerm"}) CREATE (a)-[:REFERENCES {via_method: "getBit"}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModInst"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModTerm"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaModInstTerm"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccDonut"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDonut"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDonut"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccDonut"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccLine"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccLine"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccLine"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccLine"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPath"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPath"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPath"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccPath"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccRect"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccRect"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccRect"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccRect"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTermArray"}), (b:Class {name: "oaArray<oaOccTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTermArray"}), (b:Class {name: "oaArrayBase<oaOccTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignError"}), (b:Class {name: "oaDesignException"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignError"}), (b:Class {name: "oaException"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignException"}), (b:Class {name: "oaException"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignException"}), (b:Class {name: "oaDesignError"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDiode"}), (b:Class {name: "oaStdDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDiode"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDiode"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDiode"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDiode"}), (b:Class {name: "oaDiode"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaTermArray"}), (b:Class {name: "oaArray<oaTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTermArray"}), (b:Class {name: "oaArrayBase<oaTerm *>"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaTextDisplayIter"}), (b:Class {name: "oaTextDisplay"}) CREATE (a)-[:REFERENCES {via_method: "getNext"}]->(b);
MATCH (a:Class {name: "oaMarker"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMarker"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMarker"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMarker"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaMarker"}), (b:Class {name: "oaMarker"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPcellObserver"}), (b:Class {name: "oaBaseObserver"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaModConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaModObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaModTermConnectDef"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaModBitTerm"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaModTermConnectDef"}), (b:Class {name: "oaAssignmentDef"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaFigGroup"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroup"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroup"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroup"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaFigGroup"}), (b:Class {name: "oaFigGroup"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaFigGroup"}), (b:Class {name: "oaBlock"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccNetConnectDef"}), (b:Class {name: "oaOccConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNetConnectDef"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNetConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNetConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccNetConnectDef"}), (b:Class {name: "oaOccBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaOccTermConnectDef"}), (b:Class {name: "oaOccConnectDef"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTermConnectDef"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTermConnectDef"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTermConnectDef"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTermConnectDef"}), (b:Class {name: "oaOccTerm"}) CREATE (a)-[:REFERENCES {via_method: "getTerm"}]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaBoundary"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaClusterBoundary"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaClusterBoundary"}), (b:Class {name: "oaCluster"}) CREATE (a)-[:REFERENCES {via_param: True, via_method: "getCluster"}]->(b);
MATCH (a:Class {name: "oaOccInstAttrDisplay"}), (b:Class {name: "oaOccTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstAttrDisplay"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstAttrDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstAttrDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstAttrDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstAttrDisplay"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaOccTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccInstPropDisplay"}), (b:Class {name: "oaProp"}) CREATE (a)-[:REFERENCES {via_method: "getMasterProp"}]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaOccTextDisplay"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaOccShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaInst"}) CREATE (a)-[:REFERENCES {via_method: "getInst"}]->(b);
MATCH (a:Class {name: "oaOccTextOverride"}), (b:Class {name: "oaText"}) CREATE (a)-[:REFERENCES {via_method: "getMasterText"}]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaText"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaShape"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaPinFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaConnFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaFig"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaBlockObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaEvalText"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaEvalText"}), (b:Class {name: "oaEvalTextLink"}) CREATE (a)-[:REFERENCES {via_method: "getLink"}]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaOccBusNetBit"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaOccScalarNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaOccNetConnectDef"}) CREATE (a)-[:REFERENCES {via_method: "getConnectDef"}]->(b);
MATCH (a:Class {name: "oaOccBitNet"}), (b:Class {name: "oaOccBitNet"}) CREATE (a)-[:REFERENCES {via_method: "getPreferredEquivalent"}]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaOccBitNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaOccBusNetDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaModBusNetBit"}) CREATE (a)-[:REFERENCES {via_method: "getModNet"}]->(b);
MATCH (a:Class {name: "oaOccBusNetBit"}), (b:Class {name: "oaBusNetBit"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaOccBitNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaModScalarNet"}) CREATE (a)-[:REFERENCES {via_method: "getModNet"}]->(b);
MATCH (a:Class {name: "oaOccScalarNet"}), (b:Class {name: "oaScalarNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaPcellLink"}), (b:Class {name: "oaPcellLink"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaPcellLink"}), (b:Class {name: "oaPcellDef"}) CREATE (a)-[:REFERENCES {via_method: "getPcellDef"}]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaOccBusNetDef"}) CREATE (a)-[:REFERENCES {via_method: "getDef"}]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaModBusNet"}) CREATE (a)-[:REFERENCES {via_method: "getModNet"}]->(b);
MATCH (a:Class {name: "oaOccBusNet"}), (b:Class {name: "oaBusNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaOccNet"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaOccObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaModNet"}) CREATE (a)-[:REFERENCES {via_method: "getMember"}]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaModBundleNet"}) CREATE (a)-[:REFERENCES {via_method: "getModNet"}]->(b);
MATCH (a:Class {name: "oaOccBundleNet"}), (b:Class {name: "oaBundleNet"}) CREATE (a)-[:REFERENCES {via_method: "getNet"}]->(b);
MATCH (a:Class {name: "oaDesignViaVariantHeader"}), (b:Class {name: "oaViaVariantHeader"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignViaVariantHeader"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaDesignViaVariantHeader"}), (b:Class {name: "oaDesign"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccTraverser"}), (b:Class {name: "oaOccProducer"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccTraverser"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:DEPENDS_ON {via_param: True}]->(b);
MATCH (a:Class {name: "oaOccProducer"}), (b:Class {name: "oaOccTraverser"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaOccProducer"}), (b:Class {name: "oaOccurrence"}) CREATE (a)-[:REFERENCES {via_method: "getOccurrence"}]->(b);
MATCH (a:Class {name: "oaCouplingCap"}), (b:Class {name: "oaStdDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCouplingCap"}), (b:Class {name: "oaDevice"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCouplingCap"}), (b:Class {name: "oaDesignObject"}) CREATE (a)-[:REFERENCES {via_method: "getOtherConn"}]->(b);
MATCH (a:Class {name: "oaCouplingCap"}), (b:Class {name: "oaObject"}) CREATE (a)-[:INHERITS_FROM]->(b);
MATCH (a:Class {name: "oaCouplingCap"}), (b:Class {name: "oaCouplingCap"}) CREATE (a)-[:CREATES {via_method: "create"}]->(b);
MATCH (a:Class {name: "oaCouplingCap"}), (b:Class {name: "oaNode"}) CREATE (a)-[:REFERENCES {via_method: "getOtherNode"}]->(b);
MATCH (a:Class {name: "IRegionQueryPlugMgr"}), (b:Class {name: "IBase"}) CREATE (a)-[:INHERITS_FROM]->(b);
